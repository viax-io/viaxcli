"""
Schema lifecycle state.

*@incubating*
"""
enum APIStatus {
  """
  Unstable, temporary code that might be removed in future releases.
    
  *@incubating*
  """
  EXPERIMENTAL
  """
  Until feature reaches stable status there might be backwards incompatible changes introduced in the next release.
    
  *@incubating*
  """
  INCUBATING
  """
  No breaking changes are expected in the future.
    
  *@incubating*
  """
  STABLE
}

"""
Input which is used by @api directive to define custom input/errors/resolver

*@incubating*
"""
input ApiDefinition {
  """
  *@incubating*
  """
  errors: [String!]
  """
  *@incubating*
  """
  resolvers: [String!]
}

"""
Audit data of a specific GraphQL Object instance.

*@incubating*
"""
type Audit {
  """
  Creation transaction.
    
  *@incubating*
  """
  createdAt: AuditPoint
  """
  Full transaction history in chronological order.
    
  *@incubating*
  """
  history: [AuditPoint!]
  """
  `true` if instance does not exist anymore in present time.
    
  *@incubating*
  """
  removed: Boolean
  """
  Retraction transaction.
    
  *@incubating*
  """
  retractedAt: AuditPoint
  """
  Last update transaction.
    
  *@incubating*
  """
  updatedAt: AuditPoint
}

"""
Specific point in time inside transaction history.

*@incubating*
"""
type AuditPoint {
  """
  Date & Time of transaction.
    
  *@incubating*
  """
  dateTime: DateTime
  """
  All changes to GraphQL Object field values within this transaction.
    
  *@incubating*
  """
  fieldsHistory: [FieldHistory!]
  """
  PartyAccount ID of the transaction author.
    
  *@incubating*
  """
  partyAccount: String
  """
  *@incubating*
  """
  timestamp: DateTime @deprecated(reason: "Temporary until ui uses new audit")
  """
  Transaction ID.
    
  *@incubating*
  """
  transactionId: Long
  """
  *@incubating*
  """
  user: String @deprecated(reason: "Temporary until ui uses new audit")
}

"""
Audit log support.

*@incubating*
"""
interface Auditable {
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
}

"""
An arbitrary precision signed decimal
"""
scalar BigDecimal

"""
*@incubating*
"""
type BigDecimalOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: BigDecimal!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
An arbitrary precision signed integer
"""
scalar BigInteger

"""
*@incubating*
"""
type BigIntegerOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: BigInteger!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface Billable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type BillableConnection {
  edges: [BillableConnectionBillableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type BillableConnectionBillableEdge {
  cursor: String!
  node: Billable
}

enum BillableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input BillableOrderByInput {
  direction: OrderByDirection
  field: BillableOrderByFields!
}

"""
*@incubating*
"""
interface BillableSubscribable implements Auditable & Billable & Deliverable & Model & Node & Subscribable {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  bilsBillingTerm: BillingTermOption
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  subsActivationDate: DateTime
  """
  *@incubating*
  """
  subsTerminationDate: DateTime
  """
  *@incubating*
  """
  subsValidPeriod: TimePeriod
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type BillableSubscribableConnection {
  edges: [BillableSubscribableConnectionBillableSubscribableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type BillableSubscribableConnectionBillableSubscribableEdge {
  cursor: String!
  node: BillableSubscribable
}

enum BillableSubscribableOrderByFields {
  _score
  bilsBillingTerm
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  subsActivationDate
  subsTerminationDate
  typeName
  uid
}

input BillableSubscribableOrderByInput {
  direction: OrderByDirection
  field: BillableSubscribableOrderByFields!
}

"""
*@incubating*
"""
interface BillingApproach implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input BillingApproachInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

"""
*@incubating*
"""
interface BillingTermOption implements DurationOption & DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  duration: Duration
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input BillingTermOptionInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  duration: DurationInput
  name: String
}

"""
*@incubating*
"""
type BooleanOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Boolean!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Represents a GraphQL operation that is executed asynchronously and operates in bulk mode for handling multiple tasks concurrently.
When a new bulk operation is run, use BulkOperation.status to monitor the current state of the bulk operation execution.
When the status is BulOperationStatus.COMPLETED, use BulkOperation.result to fetch the response produced by operations executed in bulk, the response is stored in JSONL format.
It is possible to run only single bulk operation at a time.

*@incubating*
"""
type BulkOperation implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  When the bulk operation was completed
    
  *@incubating*
  """
  completedAt: DateTime
  """
  True: the processing of the bulk operation continues even if the execution of the target operation fails for the current line. However, it's important to note that if an 'access denied' error occurs while calling the target operation, the entire bulk operation execution halts immediately, regardless of the value set for the field
    
  *@incubating*
  """
  continueOnError: Boolean!
  """
  When the bulk operation was established
    
  *@incubating*
  """
  createdAt: DateTime!
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  The error code indicating why the bulk operation has failed
    
  *@incubating*
  """
  errorCode: BulkOperationErrorCode
  """
  The additional error message
    
  *@incubating*
  """
  errorMessage: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  The target operation to be executed in bulk mode
    
  *@incubating*
  """
  operation: String!
  """
  The file used for operations executed in bulk should maintain data in JSONL format, where the structure of each line is expected to align with the input variables of the specified operation
    
  *@incubating*
  """
  operationFile: BulkOperationFile!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The number of processed lines. The counter can include lines for operations executed with errors, it is possible when `continueOnError` is set to true or `continueOnError` is set to false but the operation finishes with the error code `OPERATION_ERROR`, in the second case only the last line represents not successfully processed the target operation
    
  *@incubating*
  """
  processedLines: Long!
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  Retains a JSONL-formatted reference to the response data. The URL provided for the file remains valid for 7 days after the operation completes. The results are accessible for all lines successfully processed, regardless of the completion status of the process.
    
  *@incubating*
  """
  result: File
  """
  The status of the bulk operation
    
  *@incubating*
  """
  status: BulkOperationStatus!
  """
  The type of the bulk operation
    
  *@incubating*
  """
  type: BulkOperationType!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type BulkOperationConnection {
  edges: [BulkOperationConnectionBulkOperationEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type BulkOperationConnectionBulkOperationEdge {
  cursor: String!
  node: BulkOperation
}

"""
Error codes indicating the reasons for the failure of bulk operations

*@incubating*
"""
enum BulkOperationErrorCode {
  """
  The access scopes are incomplete. Execute the mutation in a regular manner (outside of a bulk operation) to obtain more details on the specific field causing the issue.
    
  *@incubating*
  """
  ACCESS_DENIED
  """
  An issue occurred on backend side
    
  *@incubating*
  """
  INTERNAL_SERVER_ERROR
  """
  Indicates error happened during executing target operation, for this error code be aware counter BulkOperation.processedLines does not include this line as processed but the response file anyway 
    
  *@incubating*
  """
  OPERATION_ERROR
}

"""
Represents a file containing JSONL data utilized by bulk operations.
Each line of data is required to conform to the format of variables used as inputs in the GraphQL operation.

*@incubating*
"""
type BulkOperationFile implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  The date when a file with JSONL data has been uploaded
    
  *@incubating*
  """
  createdAt: DateTime!
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  The file which holds uploaded JSONL data
    
  *@incubating*
  """
  file: File!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Unique key used to call bulk operation
    
  *@incubating*
  """
  key: String!
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type BulkOperationFileConnection {
  edges: [BulkOperationFileConnectionBulkOperationFileEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type BulkOperationFileConnectionBulkOperationFileEdge {
  cursor: String!
  node: BulkOperationFile
}

input BulkOperationFileInput {
  allowedToModifyFor: [UUID!]
  createdBy: DigitalIdentityInput
  file: Upload!
  key: String!
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
}

enum BulkOperationFileOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  key
  modifiedAt
  pk
  uid
}

input BulkOperationFileOrderByInput {
  direction: OrderByDirection
  field: BulkOperationFileOrderByFields!
}

input BulkOperationFileReferenceInput {
  key: String
  pk: PKRef
  uid: UUID
}

input BulkOperationInput {
  allowedToModifyFor: [UUID!]
  continueOnError: Boolean
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  operation: String!
  operationFile: BulkOperationFileReferenceInput!
  pk: PKRef
  uid: UUID
}

enum BulkOperationOrderByFields {
  _score
  completedAt
  continueOnError
  createdAt
  errorCode
  errorMessage
  id
  isReadOnly
  modifiedAt
  operation
  pk
  processedLines
  status
  type
  uid
}

input BulkOperationOrderByInput {
  direction: OrderByDirection
  field: BulkOperationOrderByFields!
}

input BulkOperationReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
Possible bulk operation statuses

*@incubating*
"""
enum BulkOperationStatus {
  """
  The bulk operation has been canceled
    
  *@incubating*
  """
  CANCELED
  """
  The bulk operation is in the process of canceling
    
  *@incubating*
  """
  CANCELING
  """
  The bulk operation has completed with success
    
  *@incubating*
  """
  COMPLETED
  """
  The bulk operation has been created
    
  *@incubating*
  """
  CREATED
  """
  The bulk operation has failed. See BulkOperation.failReason for information why the bulk operation failed
    
  *@incubating*
  """
  FAILED
  """
  The bulk operation executing in progress
    
  *@incubating*
  """
  IN_PROGRESS
}

"""
Possible bulk operation types

*@incubating*
"""
enum BulkOperationType {
  """
  The bulk operation is a mutation
    
  *@incubating*
  """
  MUTATION
  """
  The bulk operation is a query
    
  *@incubating*
  """
  QUERY
}

"""
*@incubating*
"""
interface CommunicationInteractionItem implements Auditable & LifecycleEventable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  comiId: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  lceLifecycleEvents(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): LifecycleEventToEventTypeConnection @deprecated(reason: "Use created and modified At/By")
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CommunicationInteractionItemConnection {
  edges: [CommunicationInteractionItemConnectionCommunicationInteractionItemEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CommunicationInteractionItemConnectionCommunicationInteractionItemEdge {
  cursor: String!
  node: CommunicationInteractionItem
}

enum CommunicationInteractionItemOrderByFields {
  _score
  comiId
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CommunicationInteractionItemOrderByInput {
  direction: OrderByDirection
  field: CommunicationInteractionItemOrderByFields!
}

"""
A cost per time unit.

E.g. $10/hr, 33 pence/min.

**@valueobject**
*@stable*
"""
type CostRate {
  """
  Duration. E.g. 1 hour.
    
  *@stable*
  """
  denominator: Duration
  """
  Money amount. E.g. 10 USD.
    
  *@stable*
  """
  numerator: Money
}

"""
*@incubating*
"""
type Country implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  iso2Code: String
  """
  *@incubating*
  """
  iso3Code: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  name: String
  """
  *@incubating*
  """
  numericCode: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CountryConnection {
  edges: [CountryConnectionCountryEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CountryConnectionCountryEdge {
  cursor: String!
  node: Country
}

input CountryInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  iso2Code: String
  iso3Code: String
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  numericCode: String
  pk: PKRef
  uid: UUID
}

enum CountryOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  iso2Code
  iso3Code
  modifiedAt
  name
  numericCode
  pk
  uid
}

input CountryOrderByInput {
  direction: OrderByDirection
  field: CountryOrderByFields!
}

input CountryReferenceInput {
  iso2Code: String
  iso3Code: String
  numericCode: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
input CreateFunctionInput {
  """
  *@incubating*
  """
  fun: Upload!
}

"""
*@incubating*
"""
input CreateIntegrationInput {
  """
  *@incubating*
  """
  package: Upload!
}

"""
*@incubating*
"""
interface CreditCardPayment implements Auditable & Model & Node & Payment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  ccpaCardNumber: String
  """
  *@incubating*
  """
  ccpaCardType: String
  """
  *@incubating*
  """
  ccpaExpirationDate: Date
  """
  *@incubating*
  """
  ccpaNameOnCard: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CreditCardPaymentConnection {
  edges: [CreditCardPaymentConnectionCreditCardPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CreditCardPaymentConnectionCreditCardPaymentEdge {
  cursor: String!
  node: CreditCardPayment
}

enum CreditCardPaymentOrderByFields {
  _score
  ccpaCardNumber
  ccpaCardType
  ccpaExpirationDate
  ccpaNameOnCard
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CreditCardPaymentOrderByInput {
  direction: OrderByDirection
  field: CreditCardPaymentOrderByFields!
}

"""
*@incubating*
"""
type CronTrigger implements Auditable & Model & Node & Trigger {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  code: String!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  cronExpression: String!
  """
  *@incubating*
  """
  endTime: DateTime
  """
  *@incubating*
  """
  headers: Map
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  jobData: String!
  """
  *@incubating*
  """
  lastResult: TriggerExecutionResult
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  nextExecutionTime: DateTime
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  startTime: DateTime
  """
  *@incubating*
  """
  status: TriggerStatus
  """
  *@incubating*
  """
  targetService: Service
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  url: Url
}

type CronTriggerConnection {
  edges: [CronTriggerConnectionCronTriggerEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CronTriggerConnectionCronTriggerEdge {
  cursor: String!
  node: CronTrigger
}

input CronTriggerInput {
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  cronExpression: String
  endTime: DateTime
  headers: Map
  jobData: String
  lastResult: TriggerExecutionResultInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  nextExecutionTime: DateTime
  pk: PKRef
  startTime: DateTime
  status: TriggerStatus
  targetService: ServiceInput
  uid: UUID
  url: Url
}

enum CronTriggerOrderByFields {
  _score
  code
  createdAt
  cronExpression
  endTime
  headers
  id
  isReadOnly
  jobData
  modifiedAt
  nextExecutionTime
  pk
  startTime
  status
  uid
  url
}

input CronTriggerOrderByInput {
  direction: OrderByDirection
  field: CronTriggerOrderByFields!
}

input CronTriggerReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
interface CustomerBillingPlan implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  bipBillAtRPIT: RelativePointInTime
  """
  *@incubating*
  """
  bipBillAtSpecificRPIT: RelativePointInTime @deprecated(reason: "No longer supported")
  """
  *@incubating*
  """
  bipIsTemplate: Boolean
  """
  *@incubating*
  """
  bipOwnershipModel: SalableOwnershipModel
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CustomerBillingPlanConnection {
  edges: [CustomerBillingPlanConnectionCustomerBillingPlanEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CustomerBillingPlanConnectionCustomerBillingPlanEdge {
  cursor: String!
  node: CustomerBillingPlan
}

enum CustomerBillingPlanOrderByFields {
  _score
  bipIsTemplate
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CustomerBillingPlanOrderByInput {
  direction: OrderByDirection
  field: CustomerBillingPlanOrderByFields!
}

"""
*@incubating*
"""
interface CustomerCreditCardPayment implements Auditable & CreditCardPayment & CustomerPayment & Model & Node & Payment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  ccpaCardNumber: String
  """
  *@incubating*
  """
  ccpaCardType: String
  """
  *@incubating*
  """
  ccpaExpirationDate: Date
  """
  *@incubating*
  """
  ccpaNameOnCard: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CustomerCreditCardPaymentConnection {
  edges: [CustomerCreditCardPaymentConnectionCustomerCreditCardPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CustomerCreditCardPaymentConnectionCustomerCreditCardPaymentEdge {
  cursor: String!
  node: CustomerCreditCardPayment
}

enum CustomerCreditCardPaymentOrderByFields {
  _score
  ccpaCardNumber
  ccpaCardType
  ccpaExpirationDate
  ccpaNameOnCard
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CustomerCreditCardPaymentOrderByInput {
  direction: OrderByDirection
  field: CustomerCreditCardPaymentOrderByFields!
}

"""
*@incubating*
"""
interface CustomerPayment implements Auditable & Model & Node & Payment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CustomerPaymentConnection {
  edges: [CustomerPaymentConnectionCustomerPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CustomerPaymentConnectionCustomerPaymentEdge {
  cursor: String!
  node: CustomerPayment
}

enum CustomerPaymentOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CustomerPaymentOrderByInput {
  direction: OrderByDirection
  field: CustomerPaymentOrderByFields!
}

"""
*@incubating*
"""
interface CustomerPeriodicCreditCardPayment implements Auditable & CreditCardPayment & CustomerCreditCardPayment & CustomerPayment & CustomerPeriodicPayment & Model & Node & Payment & PeriodicPayment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  ccpaCardNumber: String
  """
  *@incubating*
  """
  ccpaCardType: String
  """
  *@incubating*
  """
  ccpaExpirationDate: Date
  """
  *@incubating*
  """
  ccpaNameOnCard: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CustomerPeriodicCreditCardPaymentConnection {
  edges: [CustomerPeriodicCreditCardPaymentConnectionCustomerPeriodicCreditCardPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CustomerPeriodicCreditCardPaymentConnectionCustomerPeriodicCreditCardPaymentEdge {
  cursor: String!
  node: CustomerPeriodicCreditCardPayment
}

enum CustomerPeriodicCreditCardPaymentOrderByFields {
  _score
  ccpaCardNumber
  ccpaCardType
  ccpaExpirationDate
  ccpaNameOnCard
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CustomerPeriodicCreditCardPaymentOrderByInput {
  direction: OrderByDirection
  field: CustomerPeriodicCreditCardPaymentOrderByFields!
}

"""
*@incubating*
"""
interface CustomerPeriodicPayment implements Auditable & CustomerPayment & Model & Node & Payment & PeriodicPayment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type CustomerPeriodicPaymentConnection {
  edges: [CustomerPeriodicPaymentConnectionCustomerPeriodicPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type CustomerPeriodicPaymentConnectionCustomerPeriodicPaymentEdge {
  cursor: String!
  node: CustomerPeriodicPayment
}

enum CustomerPeriodicPaymentOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input CustomerPeriodicPaymentOrderByInput {
  direction: OrderByDirection
  field: CustomerPeriodicPaymentOrderByFields!
}

"""
An RFC-3339 compliant Full Date Scalar
"""
scalar Date

"""
*@incubating*
"""
type DateOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Date!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
A slightly refined version of RFC-3339 compliant DateTime Scalar
"""
scalar DateTime

"""
*@incubating*
"""
type DateTimeOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: DateTime!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface Deliverable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type DeliverableConnection {
  edges: [DeliverableConnectionDeliverableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type DeliverableConnectionDeliverableEdge {
  cursor: String!
  node: Deliverable
}

enum DeliverableOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input DeliverableOrderByInput {
  direction: OrderByDirection
  field: DeliverableOrderByFields!
}

"""
*@incubating*
"""
enum DeployStatus {
  """
  *@incubating*
  """
  CANCELLED
  """
  *@incubating*
  """
  DELETING
  """
  *@incubating*
  """
  DEPLOYING
  """
  *@incubating*
  """
  ENQUEUED_DELETING
  """
  *@incubating*
  """
  ENQUEUED_DEPLOYING
  """
  *@incubating*
  """
  FAILED
  """
  *@incubating*
  """
  READY
  """
  *@incubating*
  """
  TIME_OUT
  """
  *@incubating*
  """
  UNKNOWN
}

"""
*@incubating*
"""
interface Determination implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  deId: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface DigitalIdentity implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  diLogin: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

input DigitalIdentityInput {
  _viaxKeycloakDigitalIdentity: ViaxKeycloakDigitalIdentityInput
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  diLogin: String
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  typeName: String
  uid: UUID
}

"""
*@incubating*
"""
interface DigitalLocation implements Auditable & Location & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  loId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type DigitalLocationConnection {
  edges: [DigitalLocationConnectionDigitalLocationEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type DigitalLocationConnectionDigitalLocationEdge {
  cursor: String!
  node: DigitalLocation
}

enum DigitalLocationOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  loId
  modifiedAt
  pk
  typeName
  uid
}

input DigitalLocationOrderByInput {
  direction: OrderByDirection
  field: DigitalLocationOrderByFields!
}

"""
*@incubating*
"""
interface DigitalResource implements Auditable & Model & Node & Resource {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  reId: String
  """
  *@incubating*
  """
  reLocation: DigitalLocation
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type DigitalResourceConnection {
  edges: [DigitalResourceConnectionDigitalResourceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type DigitalResourceConnectionDigitalResourceEdge {
  cursor: String!
  node: DigitalResource
}

enum DigitalResourceOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  reId
  typeName
  uid
}

input DigitalResourceOrderByInput {
  direction: OrderByDirection
  field: DigitalResourceOrderByFields!
}

"""
A length of time.

E.g. "1 hour", "60 minites".

**@valueobject**
*@stable*
"""
type Duration {
  """
  Amount of time as an arbitrary-precision signed decimal number.
    
  *@stable*
  """
  amount: BigDecimal
  """
  Time unit. E.g. "hour", "minute", "year".
    
  *@stable*
  """
  units: TimeUnit
}

input DurationInput {
  amount: BigDecimal
  units: TimeUnit
}

"""
*@incubating*
"""
interface DurationOption implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  duration: Duration
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input DurationOptionInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  duration: DurationInput
  name: String
}

"""
Dynamic Enumeration.

*@incubating*
"""
interface DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

"""
*@incubating*
"""
input DynamicEnumInput {
  """
  *@incubating*
  """
  code: String!
  """
  Might be not populated if type of field/mapping argument is specific object type
    
  *@incubating*
  """
  typeName: String
}

"""
*@incubating*
"""
type DynamicEnumOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: DynamicEnum
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Special type to return information about any dynamic enum no matter
whether a dynamic enum is represented by interface or object type

*@incubating*
"""
type DynamicEnumOutput {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString]
  """
  Dynamic enum code, when typeName != superTypeName it means the code is inherited from a dynamic enum identified by superTypeName
    
  *@incubating*
  """
  code: String!
  """
  Human readable name
    
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
  """
  Is populated by all fields which additionally extend a dynamic enum type
    
  *@incubating*
  """
  payload: Map
  """
  Name of a type where the code is originally defined
    
  *@incubating*
  """
  superTypeName: String!
  """
  Name of a type which returned value represents
    
  *@incubating*
  """
  typeName: String!
}

"""
Base interface for all errors

*@incubating*
"""
interface Error {
  """
  *@incubating*
  """
  message: String
}

"""
*@incubating*
"""
type EventingTrigger {
  """
  *@incubating*
  """
  name: String
  """
  *@incubating*
  """
  ready: String
  """
  *@incubating*
  """
  reason: String
  """
  *@incubating*
  """
  target: String
}

"""
*@incubating*
"""
enum ExecutionResult {
  """
  *@incubating*
  """
  ERROR
  """
  *@incubating*
  """
  NONE
  """
  *@incubating*
  """
  SUCCESS
}

"""
*@incubating*
"""
interface ExternalDigitalResource implements Auditable & DigitalResource & Model & Node & Resource {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  reId: String
  """
  *@incubating*
  """
  reLocation: DigitalLocation
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ExternalDigitalResourceConnection {
  edges: [ExternalDigitalResourceConnectionExternalDigitalResourceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ExternalDigitalResourceConnectionExternalDigitalResourceEdge {
  cursor: String!
  node: ExternalDigitalResource
}

enum ExternalDigitalResourceOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  reId
  typeName
  uid
}

input ExternalDigitalResourceOrderByInput {
  direction: OrderByDirection
  field: ExternalDigitalResourceOrderByFields!
}

"""
*@incubating*
"""
type ExternalReference implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  erfEntity: Model
  """
  *@incubating*
  """
  erfName: ExternalReferenceName
  """
  *@incubating*
  """
  erfSystem: ExternalSystem
  """
  *@incubating*
  """
  erfUrn: Urn
  """
  *@incubating*
  """
  erfValue: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ExternalReferenceByExternalReferenceNameConnection {
  edges: [ExternalReferenceByExternalReferenceNameConnectionExternalReferenceByExternalReferenceNameEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ExternalReferenceByExternalReferenceNameConnectionExternalReferenceByExternalReferenceNameEdge {
  cursor: String!
  mapsOn: [DynamicEnumOutput!]
  node: ExternalReference
}

type ExternalReferenceConnection {
  edges: [ExternalReferenceConnectionExternalReferenceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ExternalReferenceConnectionExternalReferenceEdge {
  cursor: String!
  node: ExternalReference
}

input ExternalReferenceInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  erfEntity: ModelInput
  erfName: DynamicEnumInput
  erfSystem: ExternalSystemInput
  erfUrn: Urn
  erfValue: String
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type ExternalReferenceName implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input ExternalReferenceNameInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

enum ExternalReferenceOrderByFields {
  _score
  createdAt
  erfName
  erfUrn
  erfValue
  id
  isReadOnly
  modifiedAt
  pk
  uid
}

input ExternalReferenceOrderByInput {
  direction: OrderByDirection
  field: ExternalReferenceOrderByFields!
}

input ExternalReferenceReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type ExternalSystem implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  exsyId: String
  """
  *@incubating*
  """
  exsyName: String
  """
  *@incubating*
  """
  exsyUrls(_after: String, _before: String, _first: Int, _last: Int): [Url]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ExternalSystemConnection {
  edges: [ExternalSystemConnectionExternalSystemEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ExternalSystemConnectionExternalSystemEdge {
  cursor: String!
  node: ExternalSystem
}

input ExternalSystemInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  exsyId: String
  exsyName: String
  exsyUrls: [Url!]
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
}

enum ExternalSystemOrderByFields {
  _score
  createdAt
  exsyId
  exsyName
  id
  isReadOnly
  modifiedAt
  pk
  uid
}

input ExternalSystemOrderByInput {
  direction: OrderByDirection
  field: ExternalSystemOrderByFields!
}

input ExternalSystemReferenceInput {
  exsyId: String
  exsyName: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
interface ExternallyReferencable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  erExternalRefs(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): ExternalReferenceByExternalReferenceNameConnection
  """
  *@incubating*
  """
  erExternalRefs_ExternalReferenceName_DEFAULT(_after: String, _before: String, _first: Int, _last: Int): [ExternalReference!]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ExternallyReferencableConnection {
  edges: [ExternallyReferencableConnectionExternallyReferencableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ExternallyReferencableConnectionExternallyReferencableEdge {
  cursor: String!
  node: ExternallyReferencable
}

enum ExternallyReferencableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input ExternallyReferencableOrderByInput {
  direction: OrderByDirection
  field: ExternallyReferencableOrderByFields!
}

"""
Historical change of a specific GraphQL Object field value.

*@incubating*
"""
type FieldHistory {
  """
  Field name.
    
  *@incubating*
  """
  name: String
  """
  New field value.
    
  *@incubating*
  """
  newValue: FieldValue
  """
  Old field value.
    
  *@incubating*
  """
  oldValue: FieldValue
}

"""
GraphQL Object field value.

*@incubating*
"""
type FieldValue {
  """
  Mapping code.
    
  *@incubating*
  """
  mappingCode: String
  """
  Field value type name
    
  *@incubating*
  """
  type: String
  """
  Field value.
    
  *@incubating*
  """
  value: Object
  """
  *@incubating*
  """
  valueType: String @deprecated(reason: "Temporary until ui uses new audit")
}

"""
*@incubating*
"""
type File implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  content: String
  """
  *@incubating*
  """
  contentType: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  name: String!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  url: Url!
  """
  *@incubating*
  """
  version: String!
}

type FileConnection {
  edges: [FileConnectionFileEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileConnectionFileEdge {
  cursor: String!
  node: File
}

input FileInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
}

enum FileOrderByFields {
  _score
  content
  contentType
  createdAt
  id
  isReadOnly
  modifiedAt
  name
  pk
  uid
  url
  version
}

input FileOrderByInput {
  direction: OrderByDirection
  field: FileOrderByFields!
}

input FileReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type FloatOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Float!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
type Function implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  deployStatus: DeployStatus
  """
  *@incubating*
  """
  enqueuedAt: DateTime
  """
  *@incubating*
  """
  fun: File!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  latestCreatedRevision: String
  """
  *@incubating*
  """
  latestDeploymentStartedAt: DateTime
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  name: String!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  ready: String
  """
  *@incubating*
  """
  readyRevision: String
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  runtime: String
  """
  *@incubating*
  """
  specialization: FunctionSpecialization
  """
  *@incubating*
  """
  tag: String!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  url: Url!
  """
  *@incubating*
  """
  urn: Urn
  """
  *@incubating*
  """
  version: String
}

type FunctionConnection {
  edges: [FunctionConnectionFunctionEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type FunctionConnectionFunctionEdge {
  cursor: String!
  node: Function
}

input FunctionInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  deployStatus: DeployStatus
  enqueuedAt: DateTime
  fun: Upload
  latestCreatedRevision: String
  latestDeploymentStartedAt: DateTime
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  pk: PKRef
  ready: String
  readyRevision: String
  runtime: String
  specialization: FunctionSpecialization
  tag: String
  uid: UUID
  url: Url
  urn: Urn
  version: String
}

"""
*@incubating*
"""
enum FunctionLanguage {
  """
  *@incubating*
  """
  Node
  """
  *@incubating*
  """
  Typescript
}

enum FunctionOrderByFields {
  _score
  createdAt
  deployStatus
  enqueuedAt
  id
  isReadOnly
  latestCreatedRevision
  latestDeploymentStartedAt
  modifiedAt
  name
  pk
  ready
  readyRevision
  runtime
  specialization
  tag
  uid
  url
  urn
  version
}

input FunctionOrderByInput {
  direction: OrderByDirection
  field: FunctionOrderByFields!
}

input FunctionReferenceInput {
  name: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
input FunctionRuntimeInput {
  """
  *@incubating*
  """
  language: FunctionLanguage!
}

"""
*@incubating*
"""
type FunctionRuntimeResponse {
  """
  *@incubating*
  """
  url: Url!
}

"""
*@incubating*
"""
enum FunctionSpecialization {
  """
  *@incubating*
  """
  FUNCTION
  """
  *@incubating*
  """
  PRICING_ELEMENT
  """
  *@incubating*
  """
  RESOLVER
}

"""
*@incubating*
"""
interface GeographicAddress implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  gadCountry: Country
  """
  *@incubating*
  """
  gadStateOrProvince: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type GeographicAddressConnection {
  edges: [GeographicAddressConnectionGeographicAddressEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type GeographicAddressConnectionGeographicAddressEdge {
  cursor: String!
  node: GeographicAddress
}

enum GeographicAddressOrderByFields {
  _score
  createdAt
  gadStateOrProvince
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input GeographicAddressOrderByInput {
  direction: OrderByDirection
  field: GeographicAddressOrderByFields!
}

"""
Hierarchical structure support.

Entity which may have children `hiConsistsOf` and a parent `hiPartOf`.

E.g.:

    "Order 004611" {
        hiConsistsOf: {
            "Item 01" {
                hiConsistsOf: null
                hiPartOf: {"Order 004611"}
            }
            "Item 02" {
                hiConsistsOf: null
                hiPartOf: {"Order 004611"}
            }
            "Item 03" {
                hiConsistsOf: {
                    "Subscription Contract YW996544": {
                        hiPartOf: {"Item 03"}
                        hiConsistsOf: {
                            "Item 001" {
                                hiPartOf: {"Subscription Contract YW996544"}
                                hiConsistsOf: null
                            }
                        }
                    }
                }
                hiPartOf: {"Order 004611"}
            }
        }
        hiPartOf: null
    }

*@stable*
"""
interface Hierarchical implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Children. Or entity of which this entity is the aggregate.
    
  *@stable*
  """
  hiConsistsOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  *@stable*
  """
  hiParent: Hierarchical
  """
  Parent. Or entity in which this entity is involved in an aggregation.
    
  *@stable*
  """
  hiPartOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type HierarchicalConnection {
  edges: [HierarchicalConnectionHierarchicalEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type HierarchicalConnectionHierarchicalEdge {
  cursor: String!
  node: Hierarchical
}

enum HierarchicalOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input HierarchicalOrderByInput {
  direction: OrderByDirection
  field: HierarchicalOrderByFields!
}

"""
*@incubating*
"""
interface IPricingModel implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface Image implements Auditable & Media & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  meDescription: String
  """
  *@incubating*
  """
  meId: String
  """
  *@incubating*
  """
  meMimeType: String
  """
  *@incubating*
  """
  meName: String
  """
  *@incubating*
  """
  meResource: DigitalResource
  """
  *@incubating*
  """
  meVersion: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ImageConnection {
  edges: [ImageConnectionImageEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageConnectionImageEdge {
  cursor: String!
  node: Image
}

"""
*@incubating*
"""
interface ImageContainerItem implements Auditable & Hierarchical & MediaContainerItem & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Children. Or entity of which this entity is the aggregate.
    
  *@stable*
  """
  hiConsistsOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  *@stable*
  """
  hiParent: Hierarchical
  """
  Parent. Or entity in which this entity is involved in an aggregation.
    
  *@incubating*
  """
  hiPartOf(_after: String, _before: String, _first: Int, _last: Int): [ImagesContainer]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  mciId: String
  """
  *@incubating*
  """
  mciMedia: Image
  """
  *@incubating*
  """
  mciSequentialId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ImageContainerItemConnection {
  edges: [ImageContainerItemConnectionImageContainerItemEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageContainerItemConnectionImageContainerItemEdge {
  cursor: String!
  node: ImageContainerItem
}

enum ImageContainerItemOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  mciId
  mciSequentialId
  modifiedAt
  pk
  typeName
  uid
}

input ImageContainerItemOrderByInput {
  direction: OrderByDirection
  field: ImageContainerItemOrderByFields!
}

enum ImageOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  meDescription
  meId
  meMimeType
  meName
  meVersion
  modifiedAt
  pk
  typeName
  uid
}

input ImageOrderByInput {
  direction: OrderByDirection
  field: ImageOrderByFields!
}

"""
*@incubating*
"""
interface ImagesContainer implements Auditable & Hierarchical & MediaContainer & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Children. Or entity of which this entity is the aggregate.
    
  *@incubating*
  """
  hiConsistsOf(_after: String, _before: String, _first: Int, _last: Int): [ImageContainerItem]
  """
  *@stable*
  """
  hiParent: Hierarchical
  """
  Parent. Or entity in which this entity is involved in an aggregation.
    
  *@stable*
  """
  hiPartOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  *@incubating*
  """
  icoMasterImage: Image
  """
  *@incubating*
  """
  icoThumbnail: Image
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  mcId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ImagesContainerConnection {
  edges: [ImagesContainerConnectionImagesContainerEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImagesContainerConnectionImagesContainerEdge {
  cursor: String!
  node: ImagesContainer
}

enum ImagesContainerOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  mcId
  modifiedAt
  pk
  typeName
  uid
}

input ImagesContainerOrderByInput {
  direction: OrderByDirection
  field: ImagesContainerOrderByFields!
}

"""
*@incubating*
"""
type IntOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Int!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface IntangibleDeliverable implements Auditable & Deliverable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type IntangibleDeliverableConnection {
  edges: [IntangibleDeliverableConnectionIntangibleDeliverableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type IntangibleDeliverableConnectionIntangibleDeliverableEdge {
  cursor: String!
  node: IntangibleDeliverable
}

enum IntangibleDeliverableOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input IntangibleDeliverableOrderByInput {
  direction: OrderByDirection
  field: IntangibleDeliverableOrderByFields!
}

"""
*@incubating*
"""
type Integration {
  """
  *@incubating*
  """
  name: String
  """
  *@incubating*
  """
  phase: String
}

"""
*@incubating*
"""
type IntegrationDeployment implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  deployStatus: DeployStatus
  """
  *@incubating*
  """
  enqueuedAt: DateTime
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  latestDeploymentStartedAt: DateTime
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  name: String!
  """
  *@incubating*
  """
  package: File!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type IntegrationDeploymentConnection {
  edges: [IntegrationDeploymentConnectionIntegrationDeploymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type IntegrationDeploymentConnectionIntegrationDeploymentEdge {
  cursor: String!
  node: IntegrationDeployment
}

input IntegrationDeploymentInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  deployStatus: DeployStatus
  enqueuedAt: DateTime
  latestDeploymentStartedAt: DateTime
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  package: Upload
  pk: PKRef
  uid: UUID
}

enum IntegrationDeploymentOrderByFields {
  _score
  createdAt
  deployStatus
  enqueuedAt
  id
  isReadOnly
  latestDeploymentStartedAt
  modifiedAt
  name
  pk
  uid
}

input IntegrationDeploymentOrderByInput {
  direction: OrderByDirection
  field: IntegrationDeploymentOrderByFields!
}

input IntegrationDeploymentReferenceInput {
  name: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
enum IntervalUnit {
  """
  *@incubating*
  """
  HOUR
  """
  *@incubating*
  """
  MILLISECOND
  """
  *@incubating*
  """
  MINUTE
  """
  *@incubating*
  """
  SECOND
}

"""
*@incubating*
"""
type KeyGenerationCounter implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  code: String!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  startValue: Long!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  value: Long!
}

type KeyGenerationCounterConnection {
  edges: [KeyGenerationCounterConnectionKeyGenerationCounterEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type KeyGenerationCounterConnectionKeyGenerationCounterEdge {
  cursor: String!
  node: KeyGenerationCounter
}

input KeyGenerationCounterInput {
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  startValue: Long
  uid: UUID
  value: Long
}

enum KeyGenerationCounterOrderByFields {
  _score
  code
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  startValue
  uid
  value
}

input KeyGenerationCounterOrderByInput {
  direction: OrderByDirection
  field: KeyGenerationCounterOrderByFields!
}

input KeyGenerationCounterReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
interface KeycloakDigitalIdentity implements Auditable & DigitalIdentity & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  diLogin: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
input LambdaInput {
  """
  *@incubating*
  """
  payload: String
}

"""
*@incubating*
"""
type LambdaResult {
  """
  *@incubating*
  """
  payload: String
}

"""
A language tag scalar
"""
scalar LanguageTag

"""
*@incubating*
"""
type LanguageTagOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: LanguageTag!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Base interface for all lifecycle events

*@incubating*
"""
interface LifecycleEvent implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  lcevExecutedAt: DateTime @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  lcevPartyAccountId: String @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  lcevPartyId: String @deprecated(reason: "Use created and modified At/By")
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type LifecycleEventConnection {
  edges: [LifecycleEventConnectionLifecycleEventEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type LifecycleEventConnectionLifecycleEventEdge {
  cursor: String!
  node: LifecycleEvent
}

enum LifecycleEventOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  lcevExecutedAt
  lcevPartyAccountId
  lcevPartyId
  modifiedAt
  pk
  typeName
  uid
}

input LifecycleEventOrderByInput {
  direction: OrderByDirection
  field: LifecycleEventOrderByFields!
}

"""
Base interface for tracking model lifecycle events

*@incubating*
"""
type LifecycleEventToEventTypeConnection {
  """
  *@incubating*
  """
  edges: [LifecycleEventsConnectionEdge!] @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  pageInfo: PageInfo! @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  totalCount: Int! @deprecated(reason: "Use created and modified At/By")
}

"""
Enumeration for tracking types of lifecycle events

*@incubating*
"""
type LifecycleEventType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

"""
*@incubating*
"""
interface LifecycleEventable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  lceLifecycleEvents(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): LifecycleEventToEventTypeConnection @deprecated(reason: "Use created and modified At/By")
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
type LifecycleEventsConnectionEdge {
  """
  *@incubating*
  """
  cursor: String!
  """
  *@incubating*
  """
  mapsOn: [DynamicEnumOutput!]
  """
  *@incubating*
  """
  node: LifecycleEvent @deprecated(reason: "Use created and modified At/By")
}

"""
Dynamic enum used internally by ES to provide support for localized fields

*@incubating*
"""
type Locale implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  A well-formed IETF BCP 47 language tag representing the locale
    
  *@incubating*
  """
  languageTag: String!
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input LocaleInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  languageTag: String
  name: String
}

"""
*@incubating*
"""
type LocalizedBigDecimal {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: BigDecimal
}

"""
*@incubating*
"""
input LocalizedBigDecimalInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: BigDecimal
}

"""
*@incubating*
"""
type LocalizedBigInteger {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: BigInteger
}

"""
*@incubating*
"""
input LocalizedBigIntegerInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: BigInteger
}

"""
*@incubating*
"""
type LocalizedBoolean {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Boolean
}

"""
*@incubating*
"""
input LocalizedBooleanInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Boolean
}

"""
*@incubating*
"""
type LocalizedDate {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Date
}

"""
*@incubating*
"""
input LocalizedDateInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Date
}

"""
*@incubating*
"""
type LocalizedDateTime {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: DateTime
}

"""
*@incubating*
"""
input LocalizedDateTimeInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: DateTime
}

"""
*@incubating*
"""
type LocalizedFile {
  """
  *@incubating*
  """
  mapsOn: [LanguageTag!]
  """
  *@incubating*
  """
  node: File
}

"""
*@incubating*
"""
type LocalizedFloat {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Float
}

"""
*@incubating*
"""
input LocalizedFloatInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Float
}

"""
*@incubating*
"""
type LocalizedID {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: ID
}

"""
*@incubating*
"""
input LocalizedIDInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: ID
}

"""
*@incubating*
"""
type LocalizedInt {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Int
}

"""
*@incubating*
"""
input LocalizedIntInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Int
}

"""
*@incubating*
"""
type LocalizedLanguageTag {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: LanguageTag
}

"""
*@incubating*
"""
input LocalizedLanguageTagInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: LanguageTag
}

"""
*@incubating*
"""
type LocalizedLong {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Long
}

"""
*@incubating*
"""
input LocalizedLongInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Long
}

"""
*@incubating*
"""
type LocalizedMap {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Map
}

"""
*@incubating*
"""
input LocalizedMapInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Map
}

"""
*@incubating*
"""
type LocalizedObject {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Object
}

"""
*@incubating*
"""
input LocalizedObjectInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Object
}

"""
*@incubating*
"""
type LocalizedString {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: String
}

"""
*@incubating*
"""
input LocalizedStringInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: String
}

"""
*@incubating*
"""
type LocalizedTime {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Time
}

"""
*@incubating*
"""
input LocalizedTimeInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Time
}

"""
*@incubating*
"""
type LocalizedUUID {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: UUID
}

"""
*@incubating*
"""
input LocalizedUUIDInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: UUID
}

"""
*@incubating*
"""
input LocalizedUpload {
  """
  *@incubating*
  """
  mapsOn: [LanguageTag!]
  """
  *@incubating*
  """
  node: Upload
}

"""
*@incubating*
"""
type LocalizedUrl {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Url
}

"""
*@incubating*
"""
input LocalizedUrlInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Url
}

"""
*@incubating*
"""
type LocalizedUrn {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Urn
}

"""
*@incubating*
"""
input LocalizedUrnInput {
  """
  *@incubating*
  """
  mapsOn: LanguageTag!
  """
  *@incubating*
  """
  node: Urn
}

"""
*@incubating*
"""
interface Location implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  loId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type LocationConnection {
  edges: [LocationConnectionLocationEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type LocationConnectionLocationEdge {
  cursor: String!
  node: Location
}

enum LocationOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  loId
  modifiedAt
  pk
  typeName
  uid
}

input LocationOrderByInput {
  direction: OrderByDirection
  field: LocationOrderByFields!
}

"""
A 64-bit signed integer
"""
scalar Long

"""
*@incubating*
"""
type LongOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Long!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
A map scalar
"""
scalar Map

"""
*@incubating*
"""
type MapOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Map!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type MappedRelationInfoConnection {
  edges: [MappedRelationInfoConnectionRelationTypeEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type MappedRelationInfoConnectionRelationTypeEdge {
  cursor: String!
  node: DynamicEnumOutput
}

"""
*@incubating*
"""
enum MappedRelationModifiers {
  """
   Pass when values of destination field are components 
    
  *@incubating*
  """
  CHILD_TO_PARENT
  """
   Pass when values of original field are mandatory 
    
  *@incubating*
  """
  DESTINATION_IS_MANDATORY
  """
   Many-to-many relation 
    
  *@incubating*
  """
  MANY_TO_MANY
  """
   Many-to-one relation 
    
  *@incubating*
  """
  MANY_TO_ONE
  """
   One-to-many relation 
    
  *@incubating*
  """
  ONE_TO_MANY
  """
   One-to-one relation 
    
  *@incubating*
  """
  ONE_TO_ONE
  """
   Pass when values of destination field are mandatory 
    
  *@incubating*
  """
  ORIGIN_IS_MANDATORY
  """
   Pass when values of original field are components 
    
  *@incubating*
  """
  PARENT_TO_CHILD
}

"""
*@incubating*
"""
interface Media implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  meDescription: String
  """
  *@incubating*
  """
  meId: String
  """
  *@incubating*
  """
  meMimeType: String
  """
  *@incubating*
  """
  meName: String
  """
  *@incubating*
  """
  meResource: DigitalResource
  """
  *@incubating*
  """
  meVersion: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type MediaConnection {
  edges: [MediaConnectionMediaEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type MediaConnectionMediaEdge {
  cursor: String!
  node: Media
}

"""
*@incubating*
"""
interface MediaContainer implements Auditable & Hierarchical & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Children. Or entity of which this entity is the aggregate.
    
  *@incubating*
  """
  hiConsistsOf(_after: String, _before: String, _first: Int, _last: Int): [MediaContainerItem]
  """
  *@stable*
  """
  hiParent: Hierarchical
  """
  Parent. Or entity in which this entity is involved in an aggregation.
    
  *@stable*
  """
  hiPartOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  mcId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type MediaContainerConnection {
  edges: [MediaContainerConnectionMediaContainerEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type MediaContainerConnectionMediaContainerEdge {
  cursor: String!
  node: MediaContainer
}

"""
*@incubating*
"""
interface MediaContainerItem implements Auditable & Hierarchical & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Children. Or entity of which this entity is the aggregate.
    
  *@stable*
  """
  hiConsistsOf(_after: String, _before: String, _first: Int, _last: Int): [Hierarchical]
  """
  *@stable*
  """
  hiParent: Hierarchical
  """
  Parent. Or entity in which this entity is involved in an aggregation.
    
  *@incubating*
  """
  hiPartOf(_after: String, _before: String, _first: Int, _last: Int): [MediaContainer]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  mciId: String
  """
  *@incubating*
  """
  mciMedia: Media
  """
  *@incubating*
  """
  mciSequentialId: String
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type MediaContainerItemConnection {
  edges: [MediaContainerItemConnectionMediaContainerItemEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type MediaContainerItemConnectionMediaContainerItemEdge {
  cursor: String!
  node: MediaContainerItem
}

enum MediaContainerItemOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  mciId
  mciSequentialId
  modifiedAt
  pk
  typeName
  uid
}

input MediaContainerItemOrderByInput {
  direction: OrderByDirection
  field: MediaContainerItemOrderByFields!
}

enum MediaContainerOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  mcId
  modifiedAt
  pk
  typeName
  uid
}

input MediaContainerOrderByInput {
  direction: OrderByDirection
  field: MediaContainerOrderByFields!
}

enum MediaOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  meDescription
  meId
  meMimeType
  meName
  meVersion
  modifiedAt
  pk
  typeName
  uid
}

input MediaOrderByInput {
  direction: OrderByDirection
  field: MediaOrderByFields!
}

"""
*@incubating*
"""
type MfaConfig {
  """
  *@incubating*
  """
  config: String!
}

"""
*@incubating*
"""
type MfaImport {
  """
  *@incubating*
  """
  import: String!
}

"""
*@incubating*
"""
type MfaLocalization {
  """
  *@incubating*
  """
  localization: String!
}

"""
Base interface for any *Entity* defined in GraphQL SDL.

An *Entity* is a high-level conceptual representation of a real-world object
or concept modeled in the viax Data Model.

Every *Entity* in viax must implement this interface.

Examples of *Entities*: `Customer`, `Product`, `SalesOrder`, `OrderItem`.

*@stable*
"""
interface Model implements Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Model is already exist error

*@incubating*
"""
type ModelAlreadyExistError implements Error {
  """
  *@incubating*
  """
  message: String
  """
  *@incubating*
  """
  uid: UUID
}

input ModelInput {
  _bulkOperation: BulkOperationInput
  _bulkOperationFile: BulkOperationFileInput
  _country: CountryInput
  _cronTrigger: CronTriggerInput
  _externalReference: ExternalReferenceInput
  _externalSystem: ExternalSystemInput
  _file: FileInput
  _function: FunctionInput
  _integrationDeployment: IntegrationDeploymentInput
  _keyGenerationCounter: KeyGenerationCounterInput
  _replayMessagesAudit: ReplayMessagesAuditInput
  _service: ServiceInput
  _simpleTrigger: SimpleTriggerInput
  _translation: TranslationInput
  _triggerExecutionResult: TriggerExecutionResultInput
  _unitOfMeasure: UnitOfMeasureInput
  _viaxKeycloakDigitalIdentity: ViaxKeycloakDigitalIdentityInput
  _viaxPricingContext: ViaxPricingContextInput
  _viaxUrbanPropertyAddress: ViaxUrbanPropertyAddressInput
  _viewConfig: ViewConfigInput
  _wasmFunction: WasmFunctionInput
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  typeName: String
  uid: UUID
}

"""
Model is not found error

*@incubating*
"""
type ModelNotFoundError implements Error {
  """
  *@incubating*
  """
  message: String
}

input ModelReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type ModelsOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Model!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Money amount in a specific currency. E.g. "100 USD", "20 EUR".

Can be safely treated as a "subclass" of `Quantity`. Has the same structure as in `Quantity` with a constraint
that `UnitOfMeasure.type` should always be `CURRENCY`.

**@valueobject**
*@stable*
"""
type Money {
  """
  Money amount. Arbitrary-precision signed decimal number.
    
  *@stable*
  """
  amount: BigDecimal
  """
  Currency. Represented as `UnitOfMeasure {type=CURRENCY, code=<ISO_4217_currency_code>}`.
    
  *@stable*
  """
  units: UnitOfMeasure
}

"""
Root Mutation type.

*@incubating*
"""
type Mutation {
  """
  *@incubating*
  """
  batchDeleteCronTrigger(
    _input: [CronTriggerReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): CronTriggerConnection
  """
  *@incubating*
  """
  batchDeleteFunction(_input: [FunctionReferenceInput!]): FunctionConnection
  """
  *@incubating*
  """
  batchDeleteIntegrationDeployment(
    _input: [IntegrationDeploymentReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): IntegrationDeploymentConnection
  """
  *@incubating*
  """
  batchDeleteKeyGenerationCounter(
    _input: [KeyGenerationCounterReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): KeyGenerationCounterConnection
  """
  *@experimental*
  """
  batchDeleteReplayMessagesAudit(
    _input: [ReplayMessagesAuditReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): ReplayMessagesAuditConnection
  """
  *@incubating*
  """
  batchDeleteService(
    _input: [ServiceReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): ServiceConnection
  """
  *@incubating*
  """
  batchDeleteSimpleTrigger(
    _input: [SimpleTriggerReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): SimpleTriggerConnection
  """
  *@incubating*
  """
  batchDeleteTranslation(
    _input: [TranslationReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): TranslationConnection
  """
  *@incubating*
  """
  batchDeleteTrigger(
    _input: [TriggerReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): TriggerConnection
  """
  *@incubating*
  """
  batchDeleteTriggerExecutionResult(
    _input: [TriggerExecutionResultReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): TriggerExecutionResultConnection
  """
  *@incubating*
  """
  batchDeleteViewConfig(
    _input: [ViewConfigReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): ViewConfigConnection
  """
  *@experimental*
  """
  batchDeleteWasmFunction(
    _input: [WasmFunctionReferenceInput!]
    _locale: LanguageTag
    _speculative: Boolean
  ): WasmFunctionConnection
  """
  *@experimental*
  """
  cancelActiveReplayMessagesJob: String
  """
  *@incubating*
  """
  createBillingApproach(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: BillingApproachInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createBillingTermOption(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: BillingTermOptionInput!
  ): DynamicEnumOutput!
  """
  Initiates and executes a bulk operation mutation. For detailed instructions on asynchronously importing large volumes of data, consult the bulk import data guide LINK HERE
    
  *@incubating*
  """
  createBulkOperation(_locale: LanguageTag, _speculative: Boolean, input: BulkOperationInput): BulkOperation
  """
  Creates a bulk operation file for further using by bulk operations
    
  *@incubating*
  """
  createBulkOperationFile(
    _locale: LanguageTag
    _speculative: Boolean
    input: BulkOperationFileInput
  ): BulkOperationFile
  """
  *@incubating*
  """
  createCountry(_locale: LanguageTag, _speculative: Boolean, input: CountryInput): Country
  """
  *@incubating*
  """
  createCronTrigger(_locale: LanguageTag, _speculative: Boolean, input: CronTriggerInput): CronTrigger
  """
  *@incubating*
  """
  createDurationOption(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: DurationOptionInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createExternalReference(
    _locale: LanguageTag
    _speculative: Boolean
    input: ExternalReferenceInput
  ): ExternalReference
  """
  *@incubating*
  """
  createExternalReferenceName(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: ExternalReferenceNameInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createExternalSystem(_locale: LanguageTag, _speculative: Boolean, input: ExternalSystemInput): ExternalSystem
  """
  *@incubating*
  """
  createFile(_locale: LanguageTag, _speculative: Boolean, input: FileInput): File
  """
  *@incubating*
  """
  createFunction(input: CreateFunctionInput!): Function
  """
  *@incubating*
  """
  createIntegrationDeployment(input: CreateIntegrationInput!): IntegrationDeployment
  """
  *@incubating*
  """
  createKeyGenerationCounter(
    _locale: LanguageTag
    _speculative: Boolean
    input: KeyGenerationCounterInput
  ): KeyGenerationCounter
  """
  *@incubating*
  """
  createLocale(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: LocaleInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createNotificationType(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: NotificationTypeInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createPaymentTermOption(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: PaymentTermOptionInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createPriceType(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: PriceTypeInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createPriceableToIPricingModelConnectionType(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: PriceableToIPricingModelConnectionTypeInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createPriceableToPricingDeterminationModelConnectionType(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: PriceableToPricingDeterminationModelConnectionTypeInput!
  ): DynamicEnumOutput!
  """
  *@incubating*
  """
  createRelationType(
    """
    Reload the schema if the created dynamic enum should become available in the schema at once after adding the enum value. The case when it might be useful to pass false is when several enum values are created and only after creating the latest enum value it makes sense to reload the schema since schema reloading is heavy operation
    """
    _reloadSchema: Boolean
    input: RelationTypeInput!
  ): DynamicEnumOutput!
  """
  *@experimental*
  """
  createReplayMessagesAudit(
    _locale: LanguageTag
    _speculative: Boolean
    input: ReplayMessagesAuditInput
  ): ReplayMessagesAudit
  """
  *@incubating*
  """
  createService(_locale: LanguageTag, _speculative: Boolean, input: ServiceInput): Service
  """
  *@incubating*
  """
  createSimpleTrigger(_locale: LanguageTag, _speculative: Boolean, input: SimpleTriggerInput): SimpleTrigger
  """
  *@incubating*
  """
  createTranslation(_locale: LanguageTag, _speculative: Boolean, input: TranslationInput): Translation
  """
  *@incubating*
  """
  createTriggerExecutionResult(
    _locale: LanguageTag
    _speculative: Boolean
    input: TriggerExecutionResultInput
  ): TriggerExecutionResult
  """
   Creates mapped relation between passed types and its fields. Additional relation modifiers are passed through the parameter 'modifiers' 
    
  *@incubating*
  """
  createTwoDirectionalMappedRelation(
    destinationPayload: Map
    destinationRelationCode: String!
    destinationRelationField: String!
    destinationType: String!
    modifiers: [MappedRelationModifiers!]
    originPayload: Map
    originRelationCode: String!
    originRelationField: String!
    originType: String!
  ): Boolean!
  """
  *@stable*
  """
  createUnitOfMeasure(_locale: LanguageTag, _speculative: Boolean, input: UnitOfMeasureInput): UnitOfMeasure
  """
  *@incubating*
  """
  createViaxUrbanPropertyAddress(
    _locale: LanguageTag
    _speculative: Boolean
    input: ViaxUrbanPropertyAddressInput
  ): ViaxUrbanPropertyAddress
  """
  *@incubating*
  """
  createViewConfig(_locale: LanguageTag, _speculative: Boolean, input: ViewConfigInput): ViewConfig
  """
  *@experimental*
  """
  createWasmFunction(input: WasmFunctionInput): WasmFunction
  """
  *@incubating*
  """
  deleteCountry(
    _locale: LanguageTag
    _speculative: Boolean
    id: CountryReferenceInput
    input: CountryInput
  ): Country
  """
  *@incubating*
  """
  deleteCronTrigger(
    _locale: LanguageTag
    _speculative: Boolean
    id: CronTriggerReferenceInput
    input: CronTriggerInput
  ): CronTrigger
  """
  *@incubating*
  """
  deleteExternalReference(
    _locale: LanguageTag
    _speculative: Boolean
    id: ExternalReferenceReferenceInput
    input: ExternalReferenceInput
  ): ExternalReference
  """
  *@incubating*
  """
  deleteExternalSystem(
    _locale: LanguageTag
    _speculative: Boolean
    id: ExternalSystemReferenceInput
    input: ExternalSystemInput
  ): ExternalSystem
  """
  *@incubating*
  """
  deleteFile(_locale: LanguageTag, _speculative: Boolean, id: FileReferenceInput, input: FileInput): File
  """
  *@incubating*
  """
  deleteFunction(uid: UUID!): Function
  """
  *@incubating*
  """
  deleteIntegrationDeployment(uid: UUID!): IntegrationDeployment
  """
  *@incubating*
  """
  deleteKeyGenerationCounter(
    _locale: LanguageTag
    _speculative: Boolean
    id: KeyGenerationCounterReferenceInput
    input: KeyGenerationCounterInput
  ): KeyGenerationCounter
  """
  *@experimental*
  """
  deleteReplayMessagesAudit(
    _locale: LanguageTag
    _speculative: Boolean
    id: ReplayMessagesAuditReferenceInput
    input: ReplayMessagesAuditInput
  ): ReplayMessagesAudit
  """
  *@incubating*
  """
  deleteService(
    _locale: LanguageTag
    _speculative: Boolean
    id: ServiceReferenceInput
    input: ServiceInput
  ): Service
  """
  *@incubating*
  """
  deleteSimpleTrigger(
    _locale: LanguageTag
    _speculative: Boolean
    id: SimpleTriggerReferenceInput
    input: SimpleTriggerInput
  ): SimpleTrigger
  """
  *@incubating*
  """
  deleteTranslation(
    _locale: LanguageTag
    _speculative: Boolean
    id: TranslationReferenceInput
    input: TranslationInput
  ): Translation
  """
  *@incubating*
  """
  deleteTriggerExecutionResult(
    _locale: LanguageTag
    _speculative: Boolean
    id: TriggerExecutionResultReferenceInput
    input: TriggerExecutionResultInput
  ): TriggerExecutionResult
  """
  *@stable*
  """
  deleteUnitOfMeasure(
    _locale: LanguageTag
    _speculative: Boolean
    id: UnitOfMeasureReferenceInput
    input: UnitOfMeasureInput
  ): UnitOfMeasure
  """
  *@incubating*
  """
  deleteViaxUrbanPropertyAddress(
    _locale: LanguageTag
    _speculative: Boolean
    id: ViaxUrbanPropertyAddressReferenceInput
    input: ViaxUrbanPropertyAddressInput
  ): ViaxUrbanPropertyAddress
  """
  *@incubating*
  """
  deleteViewConfig(
    _locale: LanguageTag
    _speculative: Boolean
    id: ViewConfigReferenceInput
    input: ViewConfigInput
  ): ViewConfig
  """
  *@experimental*
  """
  deleteWasmFunction(
    _locale: LanguageTag
    _speculative: Boolean
    id: WasmFunctionReferenceInput
    input: WasmFunctionInput
  ): WasmFunction
  """
  *@incubating*
  """
  deployFunction(uid: UUID!): Function
  """
  *@incubating*
  """
  deployIntegrationDeployment(uid: UUID!): IntegrationDeployment
  """
  Pauses trigger by it's code.
    
  *@incubating*
  """
  pauseTrigger(uid: UUID): Trigger
  """
  *@incubating*
  """
  removeFunctionFromDeploymentQueue(uid: UUID!): Function
  """
  *@incubating*
  """
  removeIntegrationFromDeploymentQueue(uid: UUID!): IntegrationDeployment
  """
  *@incubating*
  """
  removeTwoDirectionalMappedRelation(
    destinationRelationCode: String!
    destinationRelationField: String!
    destinationType: String!
    originRelationCode: String!
    originRelationField: String!
    originType: String!
  ): Boolean!
  """
  *@experimental*
  """
  replayMessagesByStartSequence(input: ReplayMessagesByStartSequenceInput!): ReplayMessagesAudit
  """
  *@experimental*
  """
  replayMessagesByStartTime(input: ReplayMessagesByStartTimeInput!): ReplayMessagesAudit
  """
  Resumes trigger by it's code.
    
  *@incubating*
  """
  resumeTrigger(uid: UUID): Trigger
  """
  *@incubating*
  """
  saveMfaConfig(config: String): Boolean
  """
  *@incubating*
  """
  saveMfaImport(import: String): Boolean
  """
  *@incubating*
  """
  saveMfaLocalization(localization: String): Boolean
  """
  *@incubating*
  """
  testFunction(input: TestFunctionInput): TestFunctionResponse
  """
  *@incubating*
  """
  updateBulkOperation(
    _actions: [UpdateBulkOperationActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: BulkOperationReferenceInput
    pk: PKRef
  ): BulkOperation
  """
  *@incubating*
  """
  updateCountry(
    _actions: [UpdateCountryActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: CountryReferenceInput
    input: CountryInput
    pk: PKRef
  ): Country
  """
  *@incubating*
  """
  updateCronTrigger(
    _actions: [UpdateCronTriggerActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: CronTriggerReferenceInput
    input: CronTriggerInput
    pk: PKRef
  ): CronTrigger
  """
  *@incubating*
  """
  updateExternalReference(
    _actions: [UpdateExternalReferenceActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ExternalReferenceReferenceInput
    input: ExternalReferenceInput
    pk: PKRef
  ): ExternalReference
  """
  *@incubating*
  """
  updateExternalSystem(
    _actions: [UpdateExternalSystemActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ExternalSystemReferenceInput
    input: ExternalSystemInput
    pk: PKRef
  ): ExternalSystem
  """
  *@incubating*
  """
  updateFile(
    _actions: [UpdateFileActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: FileReferenceInput
    input: FileInput
    pk: PKRef
  ): File
  """
  *@incubating*
  """
  updateFunction(input: UpdateFunctionInput!): Function
  """
  *@incubating*
  """
  updateIntegrationDeployment(input: UpdateIntegrationInput!): IntegrationDeployment
  """
  *@incubating*
  """
  updateKeyGenerationCounter(
    _actions: [UpdateKeyGenerationCounterActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: KeyGenerationCounterReferenceInput
    input: KeyGenerationCounterInput
    pk: PKRef
  ): KeyGenerationCounter
  """
  *@experimental*
  """
  updateReplayMessagesAudit(
    _actions: [UpdateReplayMessagesAuditActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ReplayMessagesAuditReferenceInput
    input: ReplayMessagesAuditInput
    pk: PKRef
  ): ReplayMessagesAudit
  """
  *@incubating*
  """
  updateService(
    _actions: [UpdateServiceActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ServiceReferenceInput
    input: ServiceInput
    pk: PKRef
  ): Service
  """
  *@incubating*
  """
  updateSimpleTrigger(
    _actions: [UpdateSimpleTriggerActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: SimpleTriggerReferenceInput
    input: SimpleTriggerInput
    pk: PKRef
  ): SimpleTrigger
  """
  *@incubating*
  """
  updateTranslation(
    _actions: [UpdateTranslationActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: TranslationReferenceInput
    input: TranslationInput
    pk: PKRef
  ): Translation
  """
  *@incubating*
  """
  updateTriggerExecutionResult(
    _actions: [UpdateTriggerExecutionResultActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: TriggerExecutionResultReferenceInput
    input: TriggerExecutionResultInput
    pk: PKRef
  ): TriggerExecutionResult
  """
  *@stable*
  """
  updateUnitOfMeasure(
    _actions: [UpdateUnitOfMeasureActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: UnitOfMeasureReferenceInput
    input: UnitOfMeasureInput
    pk: PKRef
  ): UnitOfMeasure
  """
  *@incubating*
  """
  updateViaxUrbanPropertyAddress(
    _actions: [UpdateViaxUrbanPropertyAddressActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ViaxUrbanPropertyAddressReferenceInput
    input: ViaxUrbanPropertyAddressInput
    pk: PKRef
  ): ViaxUrbanPropertyAddress
  """
  *@incubating*
  """
  updateViewConfig(
    _actions: [UpdateViewConfigActionInput!]
    _locale: LanguageTag
    _speculative: Boolean
    id: ViewConfigReferenceInput
    input: ViewConfigInput
    pk: PKRef
  ): ViewConfig
  """
  *@experimental*
  """
  updateWasmFunction(input: WasmFunctionInput): WasmFunction
  """
  *@incubating*
  """
  upsertCronTrigger(_locale: LanguageTag, _speculative: Boolean, input: CronTriggerInput): CronTrigger
  """
  *@incubating*
  """
  upsertFunction(input: UpsertFunctionInput!): Function
  """
  *@incubating*
  """
  upsertIntegrationDeployment(input: UpsertIntegrationInput!): IntegrationDeployment
  """
  *@experimental*
  """
  upsertReplayMessagesAudit(
    _locale: LanguageTag
    _speculative: Boolean
    input: ReplayMessagesAuditInput
  ): ReplayMessagesAudit
  """
  *@incubating*
  """
  upsertService(_locale: LanguageTag, _speculative: Boolean, input: ServiceInput): Service
  """
  *@incubating*
  """
  upsertSimpleTrigger(_locale: LanguageTag, _speculative: Boolean, input: SimpleTriggerInput): SimpleTrigger
  """
  *@incubating*
  """
  upsertTriggerExecutionResult(
    _locale: LanguageTag
    _speculative: Boolean
    input: TriggerExecutionResultInput
  ): TriggerExecutionResult
  """
  *@experimental*
  """
  upsertWasmFunction(input: WasmFunctionInput): WasmFunction
}

"""
Any object that has an identity.

Objects with identities can be distinctly recognized over time, despite any
changes in their state or properties.

Examples include `Customer`, `Order` (with identity) vs. `Money`, `TimePeriod`
(without identity, treated as value objects).

*@stable*
"""
interface Node {
  """
  Not globally unique identifier.
    
  *@stable*
  """
  id: ID!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface Notification implements Auditable & CommunicationInteractionItem & LifecycleEventable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  comiId: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  lceLifecycleEvents(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): LifecycleEventToEventTypeConnection @deprecated(reason: "Use created and modified At/By")
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  ntfMessage: String
  """
  *@incubating*
  """
  ntfType: NotificationType
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type NotificationByTypeConnection {
  edges: [NotificationByTypeConnectionNotificationByNotificationTypeEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type NotificationByTypeConnectionNotificationByNotificationTypeEdge {
  cursor: String!
  mapsOn: [DynamicEnumOutput!]
  node: Notification
}

type NotificationConnection {
  edges: [NotificationConnectionNotificationEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type NotificationConnectionNotificationEdge {
  cursor: String!
  node: Notification
}

enum NotificationOrderByFields {
  _score
  comiId
  createdAt
  id
  isReadOnly
  modifiedAt
  ntfMessage
  ntfType
  pk
  typeName
  uid
}

input NotificationOrderByInput {
  direction: OrderByDirection
  field: NotificationOrderByFields!
}

"""
*@incubating*
"""
interface NotificationType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input NotificationTypeInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

"""
*@incubating*
"""
interface Notificationable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  ntNotifications(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): NotificationByTypeConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type NotificationableConnection {
  edges: [NotificationableConnectionNotificationableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type NotificationableConnectionNotificationableEdge {
  cursor: String!
  node: Notificationable
}

enum NotificationableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input NotificationableOrderByInput {
  direction: OrderByDirection
  field: NotificationableOrderByFields!
}

"""
An object scalar
"""
scalar Object

"""
*@incubating*
"""
type ObjectOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Object!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface OneTimePurchaseOwnershipModel implements Auditable & Model & Node & OwnershipModel & SalableOwnershipModel {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  omDescription: String
  """
  *@incubating*
  """
  omId: String
  """
  *@incubating*
  """
  omName: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  somBillingPlans(
    _after: String
    _before: String
    _first: Int
    _last: Int
    bipIsTemplate: Boolean
  ): [CustomerBillingPlan]
  """
  *@incubating*
  """
  somDefaultItemTypeName: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type OneTimePurchaseOwnershipModelConnection {
  edges: [OneTimePurchaseOwnershipModelConnectionOneTimePurchaseOwnershipModelEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type OneTimePurchaseOwnershipModelConnectionOneTimePurchaseOwnershipModelEdge {
  cursor: String!
  node: OneTimePurchaseOwnershipModel
}

enum OneTimePurchaseOwnershipModelOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  omDescription
  omId
  omName
  pk
  somDefaultItemTypeName
  typeName
  uid
}

input OneTimePurchaseOwnershipModelOrderByInput {
  direction: OrderByDirection
  field: OneTimePurchaseOwnershipModelOrderByFields!
}

"""
Ordering (sorting) direction.

*@stable*
"""
enum OrderByDirection {
  """
  *@stable*
  """
  ASC
  """
  *@stable*
  """
  DESC
}

"""
*@incubating*
"""
interface OwnershipModel implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  omDescription: String
  """
  *@incubating*
  """
  omId: String
  """
  *@incubating*
  """
  omName: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type OwnershipModelConnection {
  edges: [OwnershipModelConnectionOwnershipModelEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type OwnershipModelConnectionOwnershipModelEdge {
  cursor: String!
  node: OwnershipModel
}

enum OwnershipModelOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  omDescription
  omId
  omName
  pk
  typeName
  uid
}

input OwnershipModelOrderByInput {
  direction: OrderByDirection
  field: OwnershipModelOrderByFields!
}

"""
Represents specific instance of primary key

*@incubating*
"""
type PK {
  """
  Name of unique field the primary key refers to
    
  *@incubating*
  """
  fieldName: String!
  """
  *@incubating*
  """
  typeName: String!
  """
  Unique value among the values provided by the paid <typeName> + <fieldName. Returned value is a value serialized to a string from original value provided by <typeName>/<fieldName>
    
  *@incubating*
  """
  value: ID!
}

"""
Input to refer existing model

*@incubating*
"""
input PKRef {
  """
  type name can be skipped if model reference is passed for a field which value type is object specific
    
  *@incubating*
  """
  typeName: String
  """
  Primary key value which relates to type identified by `typeName`
    
  *@incubating*
  """
  value: ID!
}

"""
Used as value type by a field 'pageInfo' of connection specific types.

*@incubating*
"""
type PageInfo {
  """
  The cursor corresponding to the last node in edges.
    
  *@incubating*
  """
  endCursor: String
  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
    
  *@incubating*
  """
  hasNextPage: Boolean!
  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
    
  *@incubating*
  """
  hasPreviousPage: Boolean!
  """
  The cursor corresponding to the first node in edges.
    
  *@incubating*
  """
  startCursor: String
}

"""
Pagination support.

@deprecated(reason: "Will be removed in future versions in favor of https://relay.dev/graphql/connections.htm")

*@incubating*
"""
interface Pageable {
  """
  *@incubating*
  """
  currentPage: Int
  """
  *@incubating*
  """
  pageSize: Int
  """
  *@incubating*
  """
  totalCount: Int
  """
  *@incubating*
  """
  totalPages: Int
}

"""
@deprecated(reason: "Will be removed in future versions in favor of https://relay.dev/graphql/connections.htm")

*@incubating*
"""
input PaginationInput {
  """
  *@incubating*
  """
  limit: Int! = 10
  """
  *@incubating*
  """
  page: Int! = 1
}

"""
Represents an individual, organization or organization unit.

Party is an abstract concept that should be used in places where
the business says something can be an organization,
organization unit or an individual.

*@stable*
"""
interface Party implements Auditable & ExternallyReferencable & Model & Node & PartyOrPartyRole {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  erExternalRefs(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): ExternalReferenceByExternalReferenceNameConnection
  """
  *@incubating*
  """
  erExternalRefs_ExternalReferenceName_DEFAULT(_after: String, _before: String, _first: Int, _last: Int): [ExternalReference!]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Unique identifier for Party
    
  *@stable*
  """
  paId: String
  """
  A list of all roles this Party plays
    
  *@stable*
  """
  paPartyRoles(_after: String, _before: String, _first: Int, _last: Int): [PartyRole]
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface PartyAccount implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PartyAccountConnection {
  edges: [PartyAccountConnectionPartyAccountEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PartyAccountConnectionPartyAccountEdge {
  cursor: String!
  node: PartyAccount
}

enum PartyAccountOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PartyAccountOrderByInput {
  direction: OrderByDirection
  field: PartyAccountOrderByFields!
}

"""
Party or Party Role.

A generalization to provide ability to relate to `Party` or `PartyRole` explicitly
via a single attribute.

*@stable*
"""
interface PartyOrPartyRole implements Auditable & ExternallyReferencable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  erExternalRefs(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): ExternalReferenceByExternalReferenceNameConnection
  """
  *@incubating*
  """
  erExternalRefs_ExternalReferenceName_DEFAULT(_after: String, _before: String, _first: Int, _last: Int): [ExternalReference!]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
The part played by a Party in a given context with any characteristics,
such as expected pattern of behavior, attributes, and/or associations
that it entails.

PartyRole should be used in places where the business refers
to a Party playing a Role.

*@stable*
"""
interface PartyRole implements Auditable & ExternallyReferencable & Model & Node & PartyOrPartyRole {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  erExternalRefs(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): ExternalReferenceByExternalReferenceNameConnection
  """
  *@incubating*
  """
  erExternalRefs_ExternalReferenceName_DEFAULT(_after: String, _before: String, _first: Int, _last: Int): [ExternalReference!]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@stable*
  """
  parId: String
  """
  Reference to a Party playing a role
    
  *@stable*
  """
  parParty: Party
  """
  *@incubating*
  """
  parPartyAccount: PartyAccount @deprecated(reason: "Use parPartyAccounts instead. VIAX-10821")
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface Payable implements Auditable & Model & Node & Priceable {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paybBillingAddress: UrbanPropertyAddress
  """
  *@incubating*
  """
  paybBillingPlan: CustomerBillingPlan
  """
  *@incubating*
  """
  paybNextBillDate: DateTime
  """
  *@incubating*
  """
  paybPayment: Payment
  """
  *@incubating*
  """
  paybPaymentDueDate: DateTime
  """
  *@incubating*
  """
  paybPaymentTerm: PaymentTermOption
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  pricPrice(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToMoneyConnection
  """
  *@incubating*
  """
  pricPricingContext: PricingContext
  """
  *@incubating*
  """
  pricPricingDetails: Object @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  *@incubating*
  """
  pricPricingManual: Boolean
  """
  *@incubating*
  """
  pricPricingModel(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToPricingDeterminationModelConnection
  """
  *@incubating*
  """
  pricPricingResult: PricingDeterminationResult
  """
  *@incubating*
  """
  pricPricingResultUid: UUID @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PayableConnection {
  edges: [PayableConnectionPayableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PayableConnectionPayableEdge {
  cursor: String!
  node: Payable
}

enum PayableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  paybNextBillDate
  paybPaymentDueDate
  paybPaymentTerm
  pk
  pricPricingDetails
  pricPricingManual
  pricPricingResultUid
  typeName
  uid
}

input PayableOrderByInput {
  direction: OrderByDirection
  field: PayableOrderByFields!
}

"""
*@incubating*
"""
interface Payment implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PaymentConnection {
  edges: [PaymentConnectionPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PaymentConnectionPaymentEdge {
  cursor: String!
  node: Payment
}

enum PaymentOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PaymentOrderByInput {
  direction: OrderByDirection
  field: PaymentOrderByFields!
}

"""
*@incubating*
"""
interface PaymentTermOption implements DurationOption & DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  duration: Duration
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input PaymentTermOptionInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  duration: DurationInput
  name: String
}

"""
*@incubating*
"""
interface PaymentToMoneyConnection {
  """
  *@incubating*
  """
  edges: [PaymentToMoneyConnectionMoneyByPriceTypeEdge!]
  """
  *@incubating*
  """
  pageInfo: PageInfo!
  """
  *@incubating*
  """
  totalCount: Int!
}

"""
*@incubating*
"""
interface PaymentToMoneyConnectionMoneyByPriceTypeEdge {
  """
  *@incubating*
  """
  cursor: String!
  """
  *@incubating*
  """
  mapsOn: DynamicEnumOutput!
  """
  *@incubating*
  """
  node: Money
}

"""
*@incubating*
"""
interface PeriodicCustomerBillingPlan implements Auditable & CustomerBillingPlan & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  bipApproach: BillingApproach
  """
  *@incubating*
  """
  bipBillAtRPIT: RelativePointInTime
  """
  *@incubating*
  """
  bipBillAtSpecificRPIT: RelativePointInTime @deprecated(reason: "No longer supported")
  """
  *@incubating*
  """
  bipIsTemplate: Boolean
  """
  *@incubating*
  """
  bipOwnershipModel: SubscriptionOwnershipModel
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PeriodicCustomerBillingPlanConnection {
  edges: [PeriodicCustomerBillingPlanConnectionPeriodicCustomerBillingPlanEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PeriodicCustomerBillingPlanConnectionPeriodicCustomerBillingPlanEdge {
  cursor: String!
  node: PeriodicCustomerBillingPlan
}

enum PeriodicCustomerBillingPlanOrderByFields {
  _score
  bipApproach
  bipIsTemplate
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PeriodicCustomerBillingPlanOrderByInput {
  direction: OrderByDirection
  field: PeriodicCustomerBillingPlanOrderByFields!
}

"""
*@incubating*
"""
interface PeriodicPayable implements Auditable & Model & Node & Payable & Priceable {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paybBillingAddress: UrbanPropertyAddress
  """
  *@incubating*
  """
  paybBillingPlan: PeriodicCustomerBillingPlan
  """
  *@incubating*
  """
  paybNextBillDate: DateTime
  """
  *@incubating*
  """
  paybPayment: PeriodicPayment
  """
  *@incubating*
  """
  paybPaymentDueDate: DateTime
  """
  *@incubating*
  """
  paybPaymentTerm: PaymentTermOption
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  pricPrice(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToMoneyConnection
  """
  *@incubating*
  """
  pricPricingContext: PricingContext
  """
  *@incubating*
  """
  pricPricingDetails: Object @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  *@incubating*
  """
  pricPricingManual: Boolean
  """
  *@incubating*
  """
  pricPricingModel(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToPricingDeterminationModelConnection
  """
  *@incubating*
  """
  pricPricingResult: PricingDeterminationResult
  """
  *@incubating*
  """
  pricPricingResultUid: UUID @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PeriodicPayableConnection {
  edges: [PeriodicPayableConnectionPeriodicPayableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PeriodicPayableConnectionPeriodicPayableEdge {
  cursor: String!
  node: PeriodicPayable
}

enum PeriodicPayableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  paybNextBillDate
  paybPaymentDueDate
  paybPaymentTerm
  pk
  pricPricingDetails
  pricPricingManual
  pricPricingResultUid
  typeName
  uid
}

input PeriodicPayableOrderByInput {
  direction: OrderByDirection
  field: PeriodicPayableOrderByFields!
}

"""
*@incubating*
"""
interface PeriodicPayment implements Auditable & Model & Node & Payment {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  paymAmount(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PaymentToMoneyConnection
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PeriodicPaymentConnection {
  edges: [PeriodicPaymentConnectionPeriodicPaymentEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PeriodicPaymentConnectionPeriodicPaymentEdge {
  cursor: String!
  node: PeriodicPayment
}

enum PeriodicPaymentOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PeriodicPaymentOrderByInput {
  direction: OrderByDirection
  field: PeriodicPaymentOrderByFields!
}

"""
*@incubating*
"""
interface Pickable implements Auditable & Deliverable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PickableConnection {
  edges: [PickableConnectionPickableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PickableConnectionPickableEdge {
  cursor: String!
  node: Pickable
}

enum PickableOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PickableOrderByInput {
  direction: OrderByDirection
  field: PickableOrderByFields!
}

"""
*@incubating*
"""
interface Place implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  pleId: String
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PlaceConnection {
  edges: [PlaceConnectionPlaceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PlaceConnectionPlaceEdge {
  cursor: String!
  node: Place
}

enum PlaceOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  pleId
  typeName
  uid
}

input PlaceOrderByInput {
  direction: OrderByDirection
  field: PlaceOrderByFields!
}

"""
*@incubating*
"""
interface PriceType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input PriceTypeInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

"""
*@incubating*
"""
interface Priceable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  pricPrice(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToMoneyConnection
  """
  *@incubating*
  """
  pricPricingContext: PricingContext
  """
  *@incubating*
  """
  pricPricingDetails: Object @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  *@incubating*
  """
  pricPricingManual: Boolean
  """
  *@incubating*
  """
  pricPricingModel(
    _after: String
    _before: String
    _first: Int
    _last: Int
    _mapsOn: [DynamicEnumInput]
  ): PriceableToPricingDeterminationModelConnection
  """
  *@incubating*
  """
  pricPricingResult: PricingDeterminationResult
  """
  *@incubating*
  """
  pricPricingResultUid: UUID @deprecated(reason: "Use `Priceable.pricPricingResult` instead")
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PriceableConnection {
  edges: [PriceableConnectionPriceableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PriceableConnectionPriceableEdge {
  cursor: String!
  node: Priceable
}

enum PriceableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  pricPricingDetails
  pricPricingManual
  pricPricingResultUid
  typeName
  uid
}

input PriceableOrderByInput {
  direction: OrderByDirection
  field: PriceableOrderByFields!
}

"""
*@incubating*
"""
interface PriceableToIPricingModelConnection {
  """
  *@incubating*
  """
  edges: [PriceableToIPricingModelConnectionIPricingModelByPriceableToIPricingModelConnectionTypeEdge!]
  """
  *@incubating*
  """
  pageInfo: PageInfo!
  """
  *@incubating*
  """
  totalCount: Int!
}

"""
*@incubating*
"""
interface PriceableToIPricingModelConnectionIPricingModelByPriceableToIPricingModelConnectionTypeEdge {
  """
  *@incubating*
  """
  cursor: String!
  """
  *@incubating*
  """
  mapsOn: [DynamicEnumOutput!]
  """
  *@incubating*
  """
  node: IPricingModel
}

"""
*@incubating*
"""
interface PriceableToIPricingModelConnectionType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input PriceableToIPricingModelConnectionTypeInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

"""
*@incubating*
"""
interface PriceableToMoneyConnection {
  """
  *@incubating*
  """
  edges: [PriceableToMoneyConnectionMoneyByPriceTypeEdge!]
  """
  *@incubating*
  """
  pageInfo: PageInfo!
  """
  *@incubating*
  """
  totalCount: Int!
}

"""
*@incubating*
"""
interface PriceableToMoneyConnectionMoneyByPriceTypeEdge {
  """
  *@incubating*
  """
  cursor: String!
  """
  *@incubating*
  """
  mapsOn: DynamicEnumOutput!
  """
  *@incubating*
  """
  node: Money
}

type PriceableToPricingDeterminationModelConnection {
  edges: [PriceableToPricingDeterminationModelConnectionPricingDeterminationModelByPriceableToPricingDeterminationModelConnectionTypeEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PriceableToPricingDeterminationModelConnectionPricingDeterminationModelByPriceableToPricingDeterminationModelConnectionTypeEdge {
  cursor: String!
  mapsOn: [DynamicEnumOutput!]
  node: PricingDeterminationModel
}

"""
*@incubating*
"""
interface PriceableToPricingDeterminationModelConnectionType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
}

input PriceableToPricingDeterminationModelConnectionTypeInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  name: String
}

"""
*@incubating*
"""
interface PricingContext implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  prcCurrency: UnitOfMeasure
  """
  *@incubating*
  """
  prcPriceable: Priceable
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type PricingContextConnection {
  edges: [PricingContextConnectionPricingContextEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PricingContextConnectionPricingContextEdge {
  cursor: String!
  node: PricingContext
}

enum PricingContextOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
}

input PricingContextOrderByInput {
  direction: OrderByDirection
  field: PricingContextOrderByFields!
}

"""
*@incubating*
"""
interface PricingDeterminationModel implements Auditable & Determination & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  deId: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface PricingDeterminationResult implements Auditable & Determination & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  deId: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Amount of anything in a specific unit of measurement.

E.g. "1 meter", "5 ounces", "10 kilograms", "2 pieces".

**@valueobject**
*@stable*
"""
type Quantity {
  """
  Amount as an arbitrary-precision signed decimal number.
    
  *@stable*
  """
  amount: BigDecimal
  """
  Unit of measurement for the `amount`.
    
  *@stable*
  """
  units: UnitOfMeasure
}

"""
Root Query type.

*@incubating*
"""
type Query {
  """
  *@incubating*
  """
  _gw_viaxprocessengine_CronTrigger(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [CronTrigger!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_Function(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [Function!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_IntegrationDeployment(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [IntegrationDeployment!]
  """
  *@experimental*
  """
  _gw_viaxprocessengine_ReplayMessagesAudit(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [ReplayMessagesAudit!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_Service(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [Service!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_SimpleTrigger(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [SimpleTrigger!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_TriggerExecutionResult(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [TriggerExecutionResult!]
  """
  *@incubating*
  """
  _gw_viaxprocessengine_ViaxPricingContext(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [ViaxPricingContext!]
  """
  *@experimental*
  """
  _gw_viaxprocessengine_WasmFunction(_locale: LanguageTag, _transactionId: Long, uid: [UUID!]): [WasmFunction!]
  """
  *@stable*
  """
  _sdl: String
  """
  *@experimental*
  """
  browseMessages(
    messageCount: Int
    name: String!
    startSequence: Long
    startTime: DateTime
    streamType: ReplayMessagesStreamType!
  ): ReplayMessageDataPageable
  """
  Total count of instances of `_typeName` for given `_filter`.
    
  *@incubating*
  """
  count(_filter: String, _typeName: String!): Long
  """
  *@incubating*
  """
  filterBillable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [BillableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): BillableConnection
  """
  *@incubating*
  """
  filterBillableSubscribable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [BillableSubscribableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): BillableSubscribableConnection
  """
  *@incubating*
  """
  filterBulkOperation(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [BulkOperationOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): BulkOperationConnection
  """
  *@incubating*
  """
  filterBulkOperationFile(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [BulkOperationFileOrderByInput!]
    id: [ID!]
    key: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): BulkOperationFileConnection
  """
  *@incubating*
  """
  filterCommunicationInteractionItem(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CommunicationInteractionItemOrderByInput!]
    comiId: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CommunicationInteractionItemConnection
  """
  *@incubating*
  """
  filterCountry(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CountryOrderByInput!]
    id: [ID!]
    iso2Code: [String!]
    iso3Code: [String!]
    numericCode: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CountryConnection
  """
  *@incubating*
  """
  filterCreditCardPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CreditCardPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CreditCardPaymentConnection
  """
  *@incubating*
  """
  filterCronTrigger(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CronTriggerOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CronTriggerConnection
  """
  *@incubating*
  """
  filterCustomerBillingPlan(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CustomerBillingPlanOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CustomerBillingPlanConnection
  """
  *@incubating*
  """
  filterCustomerCreditCardPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CustomerCreditCardPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CustomerCreditCardPaymentConnection
  """
  *@incubating*
  """
  filterCustomerPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CustomerPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CustomerPaymentConnection
  """
  *@incubating*
  """
  filterCustomerPeriodicCreditCardPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CustomerPeriodicCreditCardPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CustomerPeriodicCreditCardPaymentConnection
  """
  *@incubating*
  """
  filterCustomerPeriodicPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [CustomerPeriodicPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): CustomerPeriodicPaymentConnection
  """
  *@incubating*
  """
  filterDeliverable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [DeliverableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): DeliverableConnection
  """
  *@incubating*
  """
  filterDigitalLocation(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [DigitalLocationOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): DigitalLocationConnection
  """
  *@incubating*
  """
  filterDigitalResource(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [DigitalResourceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): DigitalResourceConnection
  """
  *@incubating*
  """
  filterExternalDigitalResource(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ExternalDigitalResourceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ExternalDigitalResourceConnection
  """
  *@incubating*
  """
  filterExternalReference(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ExternalReferenceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ExternalReferenceConnection
  """
  *@incubating*
  """
  filterExternalSystem(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ExternalSystemOrderByInput!]
    exsyId: [String!]
    exsyName: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ExternalSystemConnection
  """
  *@incubating*
  """
  filterExternallyReferencable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ExternallyReferencableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ExternallyReferencableConnection
  """
  *@incubating*
  """
  filterFile(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [FileOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): FileConnection
  """
  *@incubating*
  """
  filterFunction(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [FunctionOrderByInput!]
    id: [ID!]
    name: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): FunctionConnection
  """
  *@incubating*
  """
  filterGeographicAddress(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [GeographicAddressOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): GeographicAddressConnection
  """
  *@stable*
  """
  filterHierarchical(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [HierarchicalOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): HierarchicalConnection
  """
  *@incubating*
  """
  filterImage(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ImageOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ImageConnection
  """
  *@incubating*
  """
  filterImageContainerItem(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ImageContainerItemOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ImageContainerItemConnection
  """
  *@incubating*
  """
  filterImagesContainer(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ImagesContainerOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ImagesContainerConnection
  """
  *@incubating*
  """
  filterIntangibleDeliverable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [IntangibleDeliverableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): IntangibleDeliverableConnection
  """
  *@incubating*
  """
  filterIntegrationDeployment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [IntegrationDeploymentOrderByInput!]
    id: [ID!]
    name: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): IntegrationDeploymentConnection
  """
  *@incubating*
  """
  filterKeyGenerationCounter(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [KeyGenerationCounterOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): KeyGenerationCounterConnection
  """
  *@incubating*
  """
  filterLifecycleEvent(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [LifecycleEventOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): LifecycleEventConnection
  """
  *@incubating*
  """
  filterLocation(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [LocationOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): LocationConnection
  """
   Searched for created mapped relations between types and its fields. includeChildren: true then the result contains information about relation of child types too
    
  *@incubating*
  """
  filterMappedRelations(
    _after: String
    _before: String
    _first: Int
    _last: Int
    field: String!
    includeChildren: Boolean = false
    type: String!
  ): MappedRelationInfoConnection
  """
  *@incubating*
  """
  filterMedia(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [MediaOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): MediaConnection
  """
  *@incubating*
  """
  filterMediaContainer(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [MediaContainerOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): MediaContainerConnection
  """
  *@incubating*
  """
  filterMediaContainerItem(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [MediaContainerItemOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): MediaContainerItemConnection
  """
  *@incubating*
  """
  filterNotification(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [NotificationOrderByInput!]
    comiId: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): NotificationConnection
  """
  *@incubating*
  """
  filterNotificationable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [NotificationableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): NotificationableConnection
  """
  *@incubating*
  """
  filterOneTimePurchaseOwnershipModel(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [OneTimePurchaseOwnershipModelOrderByInput!]
    id: [ID!]
    omId: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): OneTimePurchaseOwnershipModelConnection
  """
  *@incubating*
  """
  filterOwnershipModel(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [OwnershipModelOrderByInput!]
    id: [ID!]
    omId: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): OwnershipModelConnection
  """
  *@incubating*
  """
  filterPartyAccount(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PartyAccountOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PartyAccountConnection
  """
  *@incubating*
  """
  filterPayable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PayableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PayableConnection
  """
  *@incubating*
  """
  filterPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PaymentConnection
  """
  *@incubating*
  """
  filterPeriodicCustomerBillingPlan(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PeriodicCustomerBillingPlanOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PeriodicCustomerBillingPlanConnection
  """
  *@incubating*
  """
  filterPeriodicPayable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PeriodicPayableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PeriodicPayableConnection
  """
  *@incubating*
  """
  filterPeriodicPayment(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PeriodicPaymentOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PeriodicPaymentConnection
  """
  *@incubating*
  """
  filterPickable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PickableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PickableConnection
  """
  *@incubating*
  """
  filterPlace(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PlaceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    pleId: [String!]
    uid: [UUID!]
  ): PlaceConnection
  """
  *@incubating*
  """
  filterPriceable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PriceableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PriceableConnection
  """
  *@incubating*
  """
  filterPricingContext(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [PricingContextOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): PricingContextConnection
  """
  *@experimental*
  """
  filterReplayMessagesAudit(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ReplayMessagesAuditOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ReplayMessagesAuditConnection
  """
  *@incubating*
  """
  filterResource(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ResourceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ResourceConnection
  """
  *@incubating*
  """
  filterSalableOwnershipModel(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [SalableOwnershipModelOrderByInput!]
    id: [ID!]
    omId: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): SalableOwnershipModelConnection
  """
  *@incubating*
  """
  filterSearchable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [SearchableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): SearchableConnection
  """
  *@incubating*
  """
  filterService(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ServiceOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ServiceConnection
  """
  *@incubating*
  """
  filterSimpleTrigger(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [SimpleTriggerOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): SimpleTriggerConnection
  """
  *@incubating*
  """
  filterSubscribable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [SubscribableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): SubscribableConnection
  """
  *@incubating*
  """
  filterSubscriptionOwnershipModel(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [SubscriptionOwnershipModelOrderByInput!]
    id: [ID!]
    omId: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): SubscriptionOwnershipModelConnection
  """
  *@incubating*
  """
  filterTangibleDeliverable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TangibleDeliverableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TangibleDeliverableConnection
  """
  *@incubating*
  """
  filterTangibleDeliverableInternationally(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TangibleDeliverableInternationallyOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TangibleDeliverableInternationallyConnection
  """
  *@incubating*
  """
  filterTrackable(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TrackableOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TrackableConnection
  """
  *@incubating*
  """
  filterTranslation(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TranslationOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TranslationConnection
  """
  *@incubating*
  """
  filterTrigger(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TriggerOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TriggerConnection
  """
  *@incubating*
  """
  filterTriggerExecutionResult(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [TriggerExecutionResultOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): TriggerExecutionResultConnection
  """
  *@stable*
  """
  filterUnitOfMeasure(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [UnitOfMeasureOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): UnitOfMeasureConnection
  """
  *@incubating*
  """
  filterUrbanPropertyAddress(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [UrbanPropertyAddressOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): UrbanPropertyAddressConnection
  """
  *@incubating*
  """
  filterValueOrderingInfo(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ValueOrderingInfoOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ValueOrderingInfoConnection
  """
  *@incubating*
  """
  filterViaxUrbanPropertyAddress(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ViaxUrbanPropertyAddressOrderByInput!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ViaxUrbanPropertyAddressConnection
  """
  *@incubating*
  """
  filterViewConfig(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [ViewConfigOrderByInput!]
    code: [String!]
    id: [ID!]
    pk: [PKRef!]
    uid: [UUID!]
  ): ViewConfigConnection
  """
  *@experimental*
  """
  filterWasmFunction(
    _after: String
    _before: String
    _filter: String
    _first: Int
    _last: Int
    _orderBy: [WasmFunctionOrderByInput!]
    id: [ID!]
    name: [String!]
    pk: [PKRef!]
    uid: [UUID!]
  ): WasmFunctionConnection
  """
  Audit log of changes of instances of `_typeName` for given `id`, `uid` or `_filter`.
    
  Searches through entire database history. Will return removed instances as well.
    
  *@incubating*
  """
  getAuditData(_filter: String, _typeName: String!, id: [ID], uid: UUID): [Audit!]
  """
  *@incubating*
  """
  getBillable(id: ID, pk: PKRef, uid: UUID): Billable
  """
  *@incubating*
  """
  getBillableSubscribable(id: ID, pk: PKRef, uid: UUID): BillableSubscribable
  """
  *@incubating*
  """
  getBillingApproachValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getBillingTermOptionValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getBulkOperation(id: ID, pk: PKRef, uid: UUID): BulkOperation
  """
  *@incubating*
  """
  getBulkOperationFile(id: ID, key: String, pk: PKRef, uid: UUID): BulkOperationFile
  """
  *@incubating*
  """
  getCommunicationInteractionItem(comiId: String, id: ID, pk: PKRef, uid: UUID): CommunicationInteractionItem
  """
  *@incubating*
  """
  getCountry(id: ID, iso2Code: String, iso3Code: String, numericCode: String, pk: PKRef, uid: UUID): Country
  """
  *@incubating*
  """
  getCreditCardPayment(id: ID, pk: PKRef, uid: UUID): CreditCardPayment
  """
  *@incubating*
  """
  getCronTrigger(code: String, id: ID, pk: PKRef, uid: UUID): CronTrigger
  """
  *@incubating*
  """
  getCustomerBillingPlan(id: ID, pk: PKRef, uid: UUID): CustomerBillingPlan
  """
  *@incubating*
  """
  getCustomerCreditCardPayment(id: ID, pk: PKRef, uid: UUID): CustomerCreditCardPayment
  """
  *@incubating*
  """
  getCustomerPayment(id: ID, pk: PKRef, uid: UUID): CustomerPayment
  """
  *@incubating*
  """
  getCustomerPeriodicCreditCardPayment(id: ID, pk: PKRef, uid: UUID): CustomerPeriodicCreditCardPayment
  """
  *@incubating*
  """
  getCustomerPeriodicPayment(id: ID, pk: PKRef, uid: UUID): CustomerPeriodicPayment
  """
  *@incubating*
  """
  getDeliverable(id: ID, pk: PKRef, uid: UUID): Deliverable
  """
  *@incubating*
  """
  getDigitalLocation(id: ID, pk: PKRef, uid: UUID): DigitalLocation
  """
  *@incubating*
  """
  getDigitalResource(id: ID, pk: PKRef, uid: UUID): DigitalResource
  """
  *@incubating*
  """
  getDurationOptionValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getEventingTriggers: [EventingTrigger]
  """
  *@incubating*
  """
  getExternalDigitalResource(id: ID, pk: PKRef, uid: UUID): ExternalDigitalResource
  """
  *@incubating*
  """
  getExternalReference(id: ID, pk: PKRef, uid: UUID): ExternalReference
  """
  *@incubating*
  """
  getExternalReferenceNameValues: [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getExternalSystem(exsyId: String, exsyName: String, id: ID, pk: PKRef, uid: UUID): ExternalSystem
  """
  *@incubating*
  """
  getExternallyReferencable(id: ID, pk: PKRef, uid: UUID): ExternallyReferencable
  """
  *@incubating*
  """
  getFile(id: ID, pk: PKRef, uid: UUID): File
  """
  *@incubating*
  """
  getFunction(id: ID, name: String, pk: PKRef, uid: UUID): Function
  """
  *@incubating*
  """
  getGeographicAddress(id: ID, pk: PKRef, uid: UUID): GeographicAddress
  """
  *@stable*
  """
  getHierarchical(id: ID, pk: PKRef, uid: UUID): Hierarchical
  """
  *@incubating*
  """
  getImage(id: ID, pk: PKRef, uid: UUID): Image
  """
  *@incubating*
  """
  getImageContainerItem(id: ID, pk: PKRef, uid: UUID): ImageContainerItem
  """
  *@incubating*
  """
  getImagesContainer(id: ID, pk: PKRef, uid: UUID): ImagesContainer
  """
  *@incubating*
  """
  getIntangibleDeliverable(id: ID, pk: PKRef, uid: UUID): IntangibleDeliverable
  """
  *@incubating*
  """
  getIntegrationDeployment(id: ID, name: String, pk: PKRef, uid: UUID): IntegrationDeployment
  """
  *@incubating*
  """
  getIntegrations: [Integration]
  """
  *@incubating*
  """
  getKeyGenerationCounter(code: String, id: ID, pk: PKRef, uid: UUID): KeyGenerationCounter
  """
  *@incubating*
  """
  getLifecycleEvent(id: ID, pk: PKRef, uid: UUID): LifecycleEvent
  """
  *@incubating*
  """
  getLocaleValues: [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getLocation(id: ID, pk: PKRef, uid: UUID): Location
  """
  *@incubating*
  """
  getMedia(id: ID, pk: PKRef, uid: UUID): Media
  """
  *@incubating*
  """
  getMediaContainer(id: ID, pk: PKRef, uid: UUID): MediaContainer
  """
  *@incubating*
  """
  getMediaContainerItem(id: ID, pk: PKRef, uid: UUID): MediaContainerItem
  """
  *@incubating*
  """
  getMfaConfig: MfaConfig
  """
  *@incubating*
  """
  getMfaImport: MfaImport
  """
  *@incubating*
  """
  getMfaLocalization: MfaLocalization
  """
  *@incubating*
  """
  getNotification(comiId: String, id: ID, pk: PKRef, uid: UUID): Notification
  """
  *@incubating*
  """
  getNotificationTypeValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getNotificationable(id: ID, pk: PKRef, uid: UUID): Notificationable
  """
  *@incubating*
  """
  getOneTimePurchaseOwnershipModel(id: ID, omId: String, pk: PKRef, uid: UUID): OneTimePurchaseOwnershipModel
  """
  *@incubating*
  """
  getOwnershipModel(id: ID, omId: String, pk: PKRef, uid: UUID): OwnershipModel
  """
  *@incubating*
  """
  getPartyAccount(id: ID, pk: PKRef, uid: UUID): PartyAccount
  """
  *@incubating*
  """
  getPayable(id: ID, pk: PKRef, uid: UUID): Payable
  """
  *@incubating*
  """
  getPayment(id: ID, pk: PKRef, uid: UUID): Payment
  """
  *@incubating*
  """
  getPaymentTermOptionValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getPeriodicCustomerBillingPlan(id: ID, pk: PKRef, uid: UUID): PeriodicCustomerBillingPlan
  """
  *@incubating*
  """
  getPeriodicPayable(id: ID, pk: PKRef, uid: UUID): PeriodicPayable
  """
  *@incubating*
  """
  getPeriodicPayment(id: ID, pk: PKRef, uid: UUID): PeriodicPayment
  """
  *@incubating*
  """
  getPickable(id: ID, pk: PKRef, uid: UUID): Pickable
  """
  *@incubating*
  """
  getPlace(id: ID, pk: PKRef, pleId: String, uid: UUID): Place
  """
  *@incubating*
  """
  getPriceTypeValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getPriceable(id: ID, pk: PKRef, uid: UUID): Priceable
  """
  *@incubating*
  """
  getPriceableToIPricingModelConnectionTypeValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getPriceableToPricingDeterminationModelConnectionTypeValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@incubating*
  """
  getPricingContext(id: ID, pk: PKRef, uid: UUID): PricingContext
  """
  *@incubating*
  """
  getRelationTypeValues(includeChildValues: Boolean): [DynamicEnumOutput!]
  """
  *@experimental*
  """
  getReplayMessagesAudit(id: ID, pk: PKRef, uid: UUID): ReplayMessagesAudit
  """
  *@incubating*
  """
  getResource(id: ID, pk: PKRef, uid: UUID): Resource
  """
  *@incubating*
  """
  getSalableOwnershipModel(id: ID, omId: String, pk: PKRef, uid: UUID): SalableOwnershipModel
  """
  *@incubating*
  """
  getSearchable(id: ID, pk: PKRef, uid: UUID): Searchable
  """
  *@incubating*
  """
  getService(id: ID, pk: PKRef, uid: UUID): Service
  """
  *@incubating*
  """
  getSimpleTrigger(code: String, id: ID, pk: PKRef, uid: UUID): SimpleTrigger
  """
  Service sub-schemas.
    
  *@incubating*
  """
  getSubSchemas: [SubSchemaDTO!]
  """
  *@incubating*
  """
  getSubscribable(id: ID, pk: PKRef, uid: UUID): Subscribable
  """
  *@incubating*
  """
  getSubscriptionOwnershipModel(id: ID, omId: String, pk: PKRef, uid: UUID): SubscriptionOwnershipModel
  """
  Returns all supported locales
    
  *@incubating*
  """
  getSupportedLocales: [LanguageTag!]
  """
  *@incubating*
  """
  getTangibleDeliverable(id: ID, pk: PKRef, uid: UUID): TangibleDeliverable
  """
  *@incubating*
  """
  getTangibleDeliverableInternationally(id: ID, pk: PKRef, uid: UUID): TangibleDeliverableInternationally
  """
  *@incubating*
  """
  getTrackable(id: ID, pk: PKRef, uid: UUID): Trackable
  """
  *@incubating*
  """
  getTranslation(code: String, id: ID, pk: PKRef, uid: UUID): Translation
  """
  *@incubating*
  """
  getTrigger(code: String, id: ID, pk: PKRef, uid: UUID): Trigger
  """
  *@incubating*
  """
  getTriggerExecutionResult(id: ID, pk: PKRef, uid: UUID): TriggerExecutionResult
  """
  *@stable*
  """
  getUnitOfMeasure(code: String, id: ID, pk: PKRef, uid: UUID): UnitOfMeasure
  """
  *@incubating*
  """
  getUrbanPropertyAddress(id: ID, pk: PKRef, uid: UUID): UrbanPropertyAddress
  """
  *@incubating*
  """
  getValueOrderingInfo(id: ID, pk: PKRef, uid: UUID): ValueOrderingInfo
  """
  *@incubating*
  """
  getViaxUrbanPropertyAddress(id: ID, pk: PKRef, uid: UUID): ViaxUrbanPropertyAddress
  """
  *@incubating*
  """
  getViewConfig(code: String, id: ID, pk: PKRef, uid: UUID): ViewConfig
  """
  *@experimental*
  """
  getWasmFunction(id: ID, name: String, pk: PKRef, uid: UUID): WasmFunction
  """
  *@incubating*
  """
  runtimeTemplate(input: FunctionRuntimeInput): FunctionRuntimeResponse
}

"""
Range with lower & upper values in specific units of measurement.

It is required for both `lowerValue` & `upperValue` to have equal `UnitOfMeasure.type`.

E.g. "0 mile/hour - 60 mile/hour", "21°C - 75.2°F".

**@valueobject**
*@stable*
"""
type Range {
  """
  Lower (start) value as an amount in a specific unit of measurement. E.g. "21°C".
    
  *@stable*
  """
  lowerValue: Quantity
  """
  Upper (end) value as an amount in a specific unit of measurement. E.g. "75.2°F".
    
  *@stable*
  """
  upperValue: Quantity
}

"""
Fraction or the change in one quantity in terms of another.

E.g. "2°C / 5 hours", "6 pineapples / 1 box".

**@valueobject**
*@stable*
"""
type Rate {
  """
  Denominator as an amount in a specific unit of measurement. E.g. "5 hours".
    
  *@stable*
  """
  denominator: Quantity
  """
  Numerator as an amount in a specific unit of measurement. E.g. "2°C".
    
  *@stable*
  """
  numerator: Quantity
}

"""
Dynamic enum which should be implemented by dynamic enums which serve mapping relation fields

*@incubating*
"""
interface RelationType implements DynamicEnum {
  """
  *@incubating*
  """
  _name_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  *@incubating*
  """
  code: String
  """
  *@incubating*
  """
  destinationCode: String!
  """
  *@incubating*
  """
  destinationField: String!
  """
  *@incubating*
  """
  destinationType: String!
  """
  *@incubating*
  """
  isComponent: Boolean
  """
  *@incubating*
  """
  isMandatory: Boolean
  """
   Allows to set component behaviour for specific relations. Accepts only 'true' because when a mapped field already has component behaviour configured then it is disallowed to retract component behaviour
    
  *@incubating*
  """
  isMany: Boolean!
  """
  *@incubating*
  """
  isReverseRelation: Boolean!
  """
  *@incubating*
  """
  name(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  name_Locale_de_DE: String
  """
  *@incubating*
  """
  name_Locale_en_GB: String
  """
  *@incubating*
  """
  name_Locale_en_US: String
  """
  *@incubating*
  """
  originField: String!
  """
  *@incubating*
  """
  originType: String!
  """
   Name of type where origin field is defined originally 
    
  *@incubating*
  """
  originallyDefinedAt: String!
}

input RelationTypeInput {
  _name_i18n: [LocalizedStringInput!]
  code: String
  destinationCode: String
  destinationField: String!
  destinationType: String!
  isComponent: Boolean
  isMandatory: Boolean
  isMany: Boolean!
  isReverseRelation: Boolean
  name: String
  originField: String!
  originType: String!
  originallyDefinedAt: String!
}

"""
A point in time relative to another point in time.

Used to represent non-absolute points in time, like "at 1 day of a year", "at 4-th hour of Monday", "at 27-th day of November", "at 5-th day of any month".

**@valueobject**
*@stable*
"""
type RelativePointInTime {
  """
  Point in time unit (time offset unit).
    
  *@stable*
  """
  atUnit: TimeUnit
  """
  Point in time number (time offset).
    
  *@stable*
  """
  atValue: BigDecimal
  """
  Human readable name of a point in time.
    
  *@stable*
  """
  name: String
  """
  Relative to point in time unit (from start of which point in time unit).
    
  *@stable*
  """
  ofUnit: TimeUnit
  """
  Relative to point in time number (from start of which point in time).
    
  *@stable*
  """
  ofValue: BigDecimal
}

"""
*@experimental*
"""
type ReplayMessageData {
  """
  *@experimental*
  """
  data: String
  """
  *@experimental*
  """
  sequenceNumber: Long
  """
  *@experimental*
  """
  timestamp: DateTime
}

"""
*@experimental*
"""
type ReplayMessageDataPageable {
  """
  *@experimental*
  """
  messages: [ReplayMessageData]
  """
  *@experimental*
  """
  totalMessages: Int
}

"""
*@experimental*
"""
type ReplayMessagesAudit implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliverPolicy: String
  """
  *@experimental*
  """
  failedMessagesCount: Long
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@experimental*
  """
  name: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@experimental*
  """
  quantityToReplay: Int
  """
  *@experimental*
  """
  reason: String
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@experimental*
  """
  replayedMessagesCount: Long
  """
  *@experimental*
  """
  startSequence: Long
  """
  *@experimental*
  """
  startTime: DateTime
  """
  *@experimental*
  """
  status: ReplayMessagesStatus
  """
  *@experimental*
  """
  streamType: ReplayMessagesStreamType
  """
  *@experimental*
  """
  targetUrl: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ReplayMessagesAuditConnection {
  edges: [ReplayMessagesAuditConnectionReplayMessagesAuditEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ReplayMessagesAuditConnectionReplayMessagesAuditEdge {
  cursor: String!
  node: ReplayMessagesAudit
}

input ReplayMessagesAuditInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  deliverPolicy: String
  failedMessagesCount: Long
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  pk: PKRef
  quantityToReplay: Int
  reason: String
  replayedMessagesCount: Long
  startSequence: Long
  startTime: DateTime
  status: ReplayMessagesStatus
  streamType: ReplayMessagesStreamType
  targetUrl: String
  uid: UUID
}

enum ReplayMessagesAuditOrderByFields {
  _score
  createdAt
  deliverPolicy
  failedMessagesCount
  id
  isReadOnly
  modifiedAt
  name
  pk
  quantityToReplay
  reason
  replayedMessagesCount
  startSequence
  startTime
  status
  streamType
  targetUrl
  uid
}

input ReplayMessagesAuditOrderByInput {
  direction: OrderByDirection
  field: ReplayMessagesAuditOrderByFields!
}

input ReplayMessagesAuditReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@experimental*
"""
input ReplayMessagesByStartSequenceInput {
  """
  *@experimental*
  """
  name: String!
  """
  *@experimental*
  """
  quantityToReplay: Int
  """
  *@experimental*
  """
  startSequence: Long!
  """
  *@experimental*
  """
  streamType: ReplayMessagesStreamType!
  """
  *@experimental*
  """
  targetUrl: String!
}

"""
*@experimental*
"""
input ReplayMessagesByStartTimeInput {
  """
  *@experimental*
  """
  name: String!
  """
  *@experimental*
  """
  quantityToReplay: Int
  """
  *@experimental*
  """
  startTime: DateTime!
  """
  *@experimental*
  """
  streamType: ReplayMessagesStreamType!
  """
  *@experimental*
  """
  targetUrl: String!
}

"""
*@experimental*
"""
enum ReplayMessagesStatus {
  """
  *@experimental*
  """
  FAILED
  """
  *@experimental*
  """
  IN_PROGRESS
  """
  *@experimental*
  """
  SUCCESS
  """
  *@experimental*
  """
  SUCCESS_WITH_ERRORS
}

"""
*@experimental*
"""
enum ReplayMessagesStreamType {
  """
  *@experimental*
  """
  BROKER
  """
  *@experimental*
  """
  CHANNEL
}

"""
*@incubating*
"""
interface Resource implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  reId: String
  """
  *@incubating*
  """
  reLocation: Location
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ResourceConnection {
  edges: [ResourceConnectionResourceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ResourceConnectionResourceEdge {
  cursor: String!
  node: Resource
}

enum ResourceOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  reId
  typeName
  uid
}

input ResourceOrderByInput {
  direction: OrderByDirection
  field: ResourceOrderByFields!
}

"""
*@incubating*
"""
interface SalableOwnershipModel implements Auditable & Model & Node & OwnershipModel {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  omDescription: String
  """
  *@incubating*
  """
  omId: String
  """
  *@incubating*
  """
  omName: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  somBillingPlans(
    _after: String
    _before: String
    _first: Int
    _last: Int
    bipIsTemplate: Boolean
  ): [CustomerBillingPlan]
  """
  *@incubating*
  """
  somDefaultItemTypeName: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type SalableOwnershipModelConnection {
  edges: [SalableOwnershipModelConnectionSalableOwnershipModelEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SalableOwnershipModelConnectionSalableOwnershipModelEdge {
  cursor: String!
  node: SalableOwnershipModel
}

enum SalableOwnershipModelOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  omDescription
  omId
  omName
  pk
  somDefaultItemTypeName
  typeName
  uid
}

input SalableOwnershipModelOrderByInput {
  direction: OrderByDirection
  field: SalableOwnershipModelOrderByFields!
}

"""
*@incubating*
"""
interface Searchable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  serSearchable: Boolean
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type SearchableConnection {
  edges: [SearchableConnectionSearchableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SearchableConnectionSearchableEdge {
  cursor: String!
  node: Searchable
}

enum SearchableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  serSearchable
  typeName
  uid
}

input SearchableOrderByInput {
  direction: OrderByDirection
  field: SearchableOrderByFields!
}

"""
*@incubating*
"""
type Service implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  name: String!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  type: ServiceType!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ServiceConnection {
  edges: [ServiceConnectionServiceEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ServiceConnectionServiceEdge {
  cursor: String!
  node: Service
}

input ServiceInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  pk: PKRef
  type: ServiceType
  uid: UUID
}

enum ServiceOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  name
  pk
  type
  uid
}

input ServiceOrderByInput {
  direction: OrderByDirection
  field: ServiceOrderByFields!
}

input ServiceReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
enum ServiceType {
  """
  *@incubating*
  """
  BROKER
  """
  *@incubating*
  """
  FUNCTION
}

"""
*@incubating*
"""
type SimpleTrigger implements Auditable & Model & Node & Trigger {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  code: String!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  endTime: DateTime
  """
  *@incubating*
  """
  headers: Map
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  *@incubating*
  """
  interval: Int!
  """
  *@incubating*
  """
  intervalUnit: IntervalUnit!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  jobData: String!
  """
  *@incubating*
  """
  lastResult: TriggerExecutionResult
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  nextExecutionTime: DateTime
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  repeatCount: Int
  """
  *@incubating*
  """
  startTime: DateTime
  """
  *@incubating*
  """
  status: TriggerStatus
  """
  *@incubating*
  """
  targetService: Service
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  url: Url
}

type SimpleTriggerConnection {
  edges: [SimpleTriggerConnectionSimpleTriggerEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SimpleTriggerConnectionSimpleTriggerEdge {
  cursor: String!
  node: SimpleTrigger
}

input SimpleTriggerInput {
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  endTime: DateTime
  headers: Map
  interval: Int
  intervalUnit: IntervalUnit
  jobData: String
  lastResult: TriggerExecutionResultInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  nextExecutionTime: DateTime
  pk: PKRef
  repeatCount: Int
  startTime: DateTime
  status: TriggerStatus
  targetService: ServiceInput
  uid: UUID
  url: Url
}

enum SimpleTriggerOrderByFields {
  _score
  code
  createdAt
  endTime
  headers
  id
  interval
  intervalUnit
  isReadOnly
  jobData
  modifiedAt
  nextExecutionTime
  pk
  repeatCount
  startTime
  status
  uid
  url
}

input SimpleTriggerOrderByInput {
  direction: OrderByDirection
  field: SimpleTriggerOrderByFields!
}

input SimpleTriggerReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@experimental*
"""
type StreamMessageData {
  """
  *@experimental*
  """
  messages: [ReplayMessageData]
  """
  *@experimental*
  """
  totalMessages: Int
}

"""
*@incubating*
"""
type StringOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: String!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
type SubSchemaDTO {
  """
  *@incubating*
  """
  apiStatus: APIStatus
  """
  *@incubating*
  """
  code: String!
  """
  *@incubating*
  """
  content: String
  """
  *@incubating*
  """
  type: SubSchemaType
}

"""
Types of sub schemas.

*@incubating*
"""
enum SubSchemaType {
  """
  *@incubating*
  """
  MODULE
  """
  *@incubating*
  """
  RUNTIME
  """
  *@incubating*
  """
  SYSTEM
}

"""
*@incubating*
"""
interface Subscribable implements Auditable & Deliverable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  subsActivationDate: DateTime
  """
  *@incubating*
  """
  subsTerminationDate: DateTime
  """
  *@incubating*
  """
  subsValidPeriod: TimePeriod
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type SubscribableConnection {
  edges: [SubscribableConnectionSubscribableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SubscribableConnectionSubscribableEdge {
  cursor: String!
  node: Subscribable
}

enum SubscribableOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  subsActivationDate
  subsTerminationDate
  typeName
  uid
}

input SubscribableOrderByInput {
  direction: OrderByDirection
  field: SubscribableOrderByFields!
}

"""
*@incubating*
"""
interface SubscriptionOwnershipModel implements Auditable & Model & Node & OwnershipModel & SalableOwnershipModel {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  omDescription: String
  """
  *@incubating*
  """
  omId: String
  """
  *@incubating*
  """
  omName: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  somBillingPlans(
    _after: String
    _before: String
    _first: Int
    _last: Int
    bipIsTemplate: Boolean
  ): [PeriodicCustomerBillingPlan]
  """
  *@incubating*
  """
  somDefaultItemTypeName: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type SubscriptionOwnershipModelConnection {
  edges: [SubscriptionOwnershipModelConnectionSubscriptionOwnershipModelEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SubscriptionOwnershipModelConnectionSubscriptionOwnershipModelEdge {
  cursor: String!
  node: SubscriptionOwnershipModel
}

enum SubscriptionOwnershipModelOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  omDescription
  omId
  omName
  pk
  somDefaultItemTypeName
  typeName
  uid
}

input SubscriptionOwnershipModelOrderByInput {
  direction: OrderByDirection
  field: SubscriptionOwnershipModelOrderByFields!
}

"""
*@incubating*
"""
interface TangibleDeliverable implements Auditable & Deliverable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  tadCarrierServiceName: String
  """
  *@incubating*
  """
  tadDeliveryAddress: UrbanPropertyAddress
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type TangibleDeliverableConnection {
  edges: [TangibleDeliverableConnectionTangibleDeliverableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TangibleDeliverableConnectionTangibleDeliverableEdge {
  cursor: String!
  node: TangibleDeliverable
}

"""
*@incubating*
"""
interface TangibleDeliverableInternationally implements Auditable & Deliverable & Model & Node & TangibleDeliverable {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  deliAvailableAt: DateTime
  """
  *@incubating*
  """
  deliDeliverAt: DateTime
  """
  *@incubating*
  """
  deliDeliveryHours(_after: String, _before: String, _first: Int, _last: Int): [Time]
  """
  *@incubating*
  """
  deliDeliveryPeriod: TimePeriod
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  tadCarrierServiceName: String
  """
  *@incubating*
  """
  tadDeliveryAddress: UrbanPropertyAddress
  """
  *@incubating*
  """
  tadiIncoterm: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type TangibleDeliverableInternationallyConnection {
  edges: [TangibleDeliverableInternationallyConnectionTangibleDeliverableInternationallyEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TangibleDeliverableInternationallyConnectionTangibleDeliverableInternationallyEdge {
  cursor: String!
  node: TangibleDeliverableInternationally
}

enum TangibleDeliverableInternationallyOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  tadCarrierServiceName
  tadiIncoterm
  typeName
  uid
}

input TangibleDeliverableInternationallyOrderByInput {
  direction: OrderByDirection
  field: TangibleDeliverableInternationallyOrderByFields!
}

enum TangibleDeliverableOrderByFields {
  _score
  createdAt
  deliAvailableAt
  deliDeliverAt
  id
  isReadOnly
  modifiedAt
  pk
  tadCarrierServiceName
  typeName
  uid
}

input TangibleDeliverableOrderByInput {
  direction: OrderByDirection
  field: TangibleDeliverableOrderByFields!
}

"""
*@incubating*
"""
input TestFunctionInput {
  """
  *@incubating*
  """
  contentType: String
  """
  *@incubating*
  """
  data: Object
  """
  *@incubating*
  """
  dataAsString: String
  """
  *@incubating*
  """
  name: String!
}

"""
*@incubating*
"""
type TestFunctionResponse {
  """
  *@incubating*
  """
  data: String
  """
  *@incubating*
  """
  headers: String
  """
  *@incubating*
  """
  status: Int
}

"""
An RFC-3339 compliant Full Time Scalar
"""
scalar Time

"""
*@incubating*
"""
type TimeOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Time!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
A period of time, between two timepoints.

E.g. "Dec 5 2021 - Dec 25 2021".

**@valueobject**
*@stable*
"""
type TimePeriod {
  """
  End date & time.
    
  *@stable*
  """
  end: DateTime
  """
  Start date & time.
    
  *@stable*
  """
  start: DateTime
}

"""
Time units.

*@stable*
"""
enum TimeUnit {
  """
  *@stable*
  """
  DAY
  """
  *@stable*
  """
  HOUR
  """
  *@stable*
  """
  MICROSECOND
  """
  *@stable*
  """
  MILLISECOND
  """
  *@stable*
  """
  MINUTE
  """
  *@stable*
  """
  MONTH
  """
  *@stable*
  """
  NANOSECOND
  """
  *@stable*
  """
  QUARTER
  """
  *@stable*
  """
  SECOND
  """
  *@stable*
  """
  WEEK
  """
  *@stable*
  """
  YEAR
}

"""
*@incubating*
"""
interface Trackable implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  traTrackingNumber: String
  """
  *@incubating*
  """
  traTrackingUrl: String
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type TrackableConnection {
  edges: [TrackableConnectionTrackableEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TrackableConnectionTrackableEdge {
  cursor: String!
  node: Trackable
}

enum TrackableOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  traTrackingNumber
  traTrackingUrl
  typeName
  uid
}

input TrackableOrderByInput {
  direction: OrderByDirection
  field: TrackableOrderByFields!
}

"""
*@incubating*
"""
type Translation implements Auditable & Model & Node {
  """
  *@incubating*
  """
  _value_i18n(_mapsOn: [LanguageTag!]): [LocalizedString!]
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  code: String!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  value(_mapsOn: LanguageTag): String
  """
  *@incubating*
  """
  value_Locale_de_DE: String
  """
  *@incubating*
  """
  value_Locale_en_GB: String
  """
  *@incubating*
  """
  value_Locale_en_US: String
}

type TranslationConnection {
  edges: [TranslationConnectionTranslationEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TranslationConnectionTranslationEdge {
  cursor: String!
  node: Translation
}

input TranslationInput {
  _value_i18n: [LocalizedStringInput!]
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
  value: String
}

enum TranslationOrderByFields {
  _score
  code
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  uid
  value
}

input TranslationOrderByInput {
  direction: OrderByDirection
  field: TranslationOrderByFields!
}

input TranslationReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
interface Trigger implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  code: String!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  endTime: DateTime
  """
  *@incubating*
  """
  headers: Map
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  jobData: String!
  """
  *@incubating*
  """
  lastResult: TriggerExecutionResult
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  nextExecutionTime: DateTime
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  startTime: DateTime
  """
  *@incubating*
  """
  status: TriggerStatus
  """
  *@incubating*
  """
  targetService: Service
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  url: Url
}

type TriggerConnection {
  edges: [TriggerConnectionTriggerEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TriggerConnectionTriggerEdge {
  cursor: String!
  node: Trigger
}

"""
*@incubating*
"""
type TriggerExecutionResult implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  result: ExecutionResult
  """
  *@incubating*
  """
  resultMessage: String
  """
  *@incubating*
  """
  trigger: Trigger
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type TriggerExecutionResultConnection {
  edges: [TriggerExecutionResultConnectionTriggerExecutionResultEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TriggerExecutionResultConnectionTriggerExecutionResultEdge {
  cursor: String!
  node: TriggerExecutionResult
}

input TriggerExecutionResultInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  result: ExecutionResult
  resultMessage: String
  trigger: TriggerInput
  uid: UUID
}

enum TriggerExecutionResultOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  result
  resultMessage
  uid
}

input TriggerExecutionResultOrderByInput {
  direction: OrderByDirection
  field: TriggerExecutionResultOrderByFields!
}

input TriggerExecutionResultReferenceInput {
  pk: PKRef
  uid: UUID
}

input TriggerInput {
  _cronTrigger: CronTriggerInput
  _simpleTrigger: SimpleTriggerInput
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  endTime: DateTime
  headers: Map
  jobData: String
  lastResult: TriggerExecutionResultInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  nextExecutionTime: DateTime
  pk: PKRef
  startTime: DateTime
  status: TriggerStatus
  targetService: ServiceInput
  typeName: String
  uid: UUID
  url: Url
}

enum TriggerOrderByFields {
  _score
  code
  createdAt
  endTime
  headers
  id
  isReadOnly
  jobData
  modifiedAt
  nextExecutionTime
  pk
  startTime
  status
  typeName
  uid
  url
}

input TriggerOrderByInput {
  direction: OrderByDirection
  field: TriggerOrderByFields!
}

input TriggerReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
enum TriggerStatus {
  """
  *@incubating*
  """
  BLOCKED
  """
  *@incubating*
  """
  COMPLETE
  """
  *@incubating*
  """
  ERROR
  """
  *@incubating*
  """
  NONE
  """
  *@incubating*
  """
  NORMAL
  """
  *@incubating*
  """
  PAUSED
}

"""
A scalar which represents tuple value
"""
scalar Tuple

"""
A universally unique identifier compliant UUID Scalar
"""
scalar UUID

"""
*@incubating*
"""
type UUIDOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: UUID!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
Unit of measurement.

E.g. "meter", "gramm", "USD", "celsius".

*@stable*
"""
type UnitOfMeasure implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Unique code.
    
  *@stable*
  """
  code: String
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  Type. Use `NUMBER` when type is unknown.
    
  *@stable*
  """
  type: UnitOfMeasureType
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type UnitOfMeasureConnection {
  edges: [UnitOfMeasureConnectionUnitOfMeasureEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type UnitOfMeasureConnectionUnitOfMeasureEdge {
  cursor: String!
  node: UnitOfMeasure
}

input UnitOfMeasureInput {
  allowedToModifyFor: [UUID!]
  code: String
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  type: UnitOfMeasureType
  uid: UUID
}

enum UnitOfMeasureOrderByFields {
  _score
  code
  createdAt
  id
  isReadOnly
  modifiedAt
  pk
  type
  uid
}

input UnitOfMeasureOrderByInput {
  direction: OrderByDirection
  field: UnitOfMeasureOrderByFields!
}

input UnitOfMeasureReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
Types of units of measurement.

`NUMBER` is a special case which means "unknown/no type".

*@stable*
"""
enum UnitOfMeasureType {
  """
  *@stable*
  """
  AMOUNT_OF_SUBSTANCE
  """
  *@stable*
  """
  CURRENCY
  """
  *@stable*
  """
  DATA_SIZE
  """
  *@stable*
  """
  ELECTRIC_CURRENT
  """
  *@stable*
  """
  LENGTH
  """
  *@stable*
  """
  LUMINOUS_INTENSITY
  """
  *@stable*
  """
  MASS
  """
  Special case, means "unknown/no type".
    
  *@stable*
  """
  NUMBER
  """
  *@stable*
  """
  TEMPERATURE
  """
  *@stable*
  """
  TIME
}

"""
*@incubating*
"""
input UpdateBulkOperationActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  Initiates canceling of the bulk operation. The bulk operation state is set to {@link BulkOperationStatus/CANCELING}, when bulk operation has stopped its execution then status is set to {@link BulkOperationStatus/CANCELED} and {@link BulkOperation/processedLines} holds the number of finally processed lines
  """
  cancelBulkOperation: Boolean
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
}

"""
*@incubating*
"""
input UpdateCountryActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToIso2Code: String
  """
  *@incubating*
  """
  setToIso3Code: String
  """
  *@incubating*
  """
  setToName: String
  """
  *@incubating*
  """
  setToNumericCode: String
}

"""
*@incubating*
"""
input UpdateCronTriggerActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToCode: String
  """
  *@incubating*
  """
  setToCronExpression: String
  """
  *@incubating*
  """
  setToEndTime: DateTime
  """
  *@incubating*
  """
  setToHeaders: Map
  """
  *@incubating*
  """
  setToJobData: String
  """
  *@incubating*
  """
  setToLastResult: TriggerExecutionResultInput
  """
  *@incubating*
  """
  setToNextExecutionTime: DateTime
  """
  *@incubating*
  """
  setToStartTime: DateTime
  """
  *@incubating*
  """
  setToStatus: TriggerStatus
  """
  *@incubating*
  """
  setToTargetService: ServiceInput
  """
  *@incubating*
  """
  setToUrl: Url
}

"""
*@incubating*
"""
input UpdateExternalReferenceActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToErfEntity: ModelReferenceInput
  """
  *@incubating*
  """
  setToErfName: DynamicEnumInput
  """
  *@incubating*
  """
  setToErfSystem: ExternalSystemReferenceInput
  """
  *@incubating*
  """
  setToErfUrn: Urn
  """
  *@incubating*
  """
  setToErfValue: String
}

"""
*@incubating*
"""
input UpdateExternalSystemActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  addToExsyUrls: Url
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromExsyUrls: Url
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToExsyId: String
  """
  *@incubating*
  """
  setToExsyName: String
  """
  *@incubating*
  """
  setToExsyUrls: [Url!]
}

"""
*@incubating*
"""
input UpdateFileActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
}

"""
*@incubating*
"""
input UpdateFunctionInput {
  """
  *@incubating*
  """
  fun: Upload!
  """
  *@incubating*
  """
  uid: UUID
}

"""
*@incubating*
"""
input UpdateIntegrationInput {
  """
  *@incubating*
  """
  package: Upload!
  """
  *@incubating*
  """
  uid: UUID
}

"""
*@incubating*
"""
input UpdateKeyGenerationCounterActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToCode: String
  """
  *@incubating*
  """
  setToStartValue: Long
  """
  *@incubating*
  """
  setToValue: Long
}

"""
*@experimental*
"""
input UpdateReplayMessagesAuditActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@experimental*
  """
  setToDeliverPolicy: String
  """
  *@experimental*
  """
  setToFailedMessagesCount: Long
  """
  *@experimental*
  """
  setToName: String
  """
  *@experimental*
  """
  setToQuantityToReplay: Int
  """
  *@experimental*
  """
  setToReason: String
  """
  *@experimental*
  """
  setToReplayedMessagesCount: Long
  """
  *@experimental*
  """
  setToStartSequence: Long
  """
  *@experimental*
  """
  setToStartTime: DateTime
  """
  *@experimental*
  """
  setToStatus: ReplayMessagesStatus
  """
  *@experimental*
  """
  setToStreamType: ReplayMessagesStreamType
  """
  *@experimental*
  """
  setToTargetUrl: String
}

"""
*@incubating*
"""
input UpdateServiceActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToName: String
  """
  *@incubating*
  """
  setToType: ServiceType
}

"""
*@incubating*
"""
input UpdateSimpleTriggerActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToCode: String
  """
  *@incubating*
  """
  setToEndTime: DateTime
  """
  *@incubating*
  """
  setToHeaders: Map
  """
  *@incubating*
  """
  setToInterval: Int
  """
  *@incubating*
  """
  setToIntervalUnit: IntervalUnit
  """
  *@incubating*
  """
  setToJobData: String
  """
  *@incubating*
  """
  setToLastResult: TriggerExecutionResultInput
  """
  *@incubating*
  """
  setToNextExecutionTime: DateTime
  """
  *@incubating*
  """
  setToRepeatCount: Int
  """
  *@incubating*
  """
  setToStartTime: DateTime
  """
  *@incubating*
  """
  setToStatus: TriggerStatus
  """
  *@incubating*
  """
  setToTargetService: ServiceInput
  """
  *@incubating*
  """
  setToUrl: Url
}

"""
*@incubating*
"""
input UpdateTranslationActionInput {
  """
  *@incubating*
  """
  _setToValue_i18n: [LocalizedStringInput!]
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToCode: String
  """
  *@incubating*
  """
  setToValue: String
}

"""
*@incubating*
"""
input UpdateTriggerExecutionResultActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToResult: ExecutionResult
  """
  *@incubating*
  """
  setToResultMessage: String
  """
  *@incubating*
  """
  setToTrigger: TriggerReferenceInput
}

"""
*@stable*
"""
input UpdateUnitOfMeasureActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@stable*
  """
  setToCode: String
  """
  *@stable*
  """
  setToType: UnitOfMeasureType
}

"""
*@incubating*
"""
input UpdateViaxUrbanPropertyAddressActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToGadCountry: CountryReferenceInput
  """
  *@incubating*
  """
  setToGadStateOrProvince: String
  """
  *@incubating*
  """
  setToUpaCity: String
  """
  *@incubating*
  """
  setToUpaEmail: String
  """
  *@incubating*
  """
  setToUpaLine1: String
  """
  *@incubating*
  """
  setToUpaLine2: String
  """
  *@incubating*
  """
  setToUpaPhoneNumber: String
  """
  *@incubating*
  """
  setToUpaPostcode: String
}

"""
*@incubating*
"""
input UpdateViewConfigActionInput {
  """
  *@incubating*
  """
  addToAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  addToContextProviders: String
  """
  *@incubating*
  """
  addToFilterValueResolvers: ViewFilterValueResolverConfigInput
  """
  *@incubating*
  """
  addToViewForRole: String
  """
  *@incubating*
  """
  addToViewTransformConfigs: ViewTransformConfigInput
  """
  *@incubating*
  """
  removeFromAllowedToModifyFor: UUID
  """
  *@incubating*
  """
  removeFromContextProviders: String
  """
  *@incubating*
  """
  removeFromViewForRole: String
  """
  *@incubating*
  """
  setToAllowedToModifyFor: [UUID!]
  """
  *@incubating*
  """
  setToCode: String
  """
  *@incubating*
  """
  setToCondition: String
  """
  *@incubating*
  """
  setToContextProviders: [String!]
  """
  *@incubating*
  """
  setToFilter: String
  """
  *@incubating*
  """
  setToFilterValueResolvers: [ViewFilterValueResolverConfigInput!]
  """
  *@incubating*
  """
  setToQuery: String
  """
  *@incubating*
  """
  setToViewForRole: [String!]
  """
  *@incubating*
  """
  setToViewForType: String
  """
  *@incubating*
  """
  setToViewTransformConfigs: [ViewTransformConfigInput!]
}

"""
A file part in a multipart request
"""
scalar Upload

"""
*@incubating*
"""
input UpsertFunctionInput {
  """
  *@incubating*
  """
  fun: Upload!
  """
  *@incubating*
  """
  uid: UUID
}

"""
*@incubating*
"""
input UpsertIntegrationInput {
  """
  *@incubating*
  """
  package: Upload!
  """
  *@incubating*
  """
  uid: UUID
}

"""
*@incubating*
"""
interface UrbanPropertyAddress implements Auditable & GeographicAddress & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  gadCountry: Country
  """
  *@incubating*
  """
  gadStateOrProvince: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  upaCity: String
  """
  *@incubating*
  """
  upaEmail: String
  """
  *@incubating*
  """
  upaLine1: String
  """
  *@incubating*
  """
  upaLine2: String
  """
  *@incubating*
  """
  upaPhoneNumber: String
  """
  *@incubating*
  """
  upaPostcode: String
}

type UrbanPropertyAddressConnection {
  edges: [UrbanPropertyAddressConnectionUrbanPropertyAddressEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type UrbanPropertyAddressConnectionUrbanPropertyAddressEdge {
  cursor: String!
  node: UrbanPropertyAddress
}

enum UrbanPropertyAddressOrderByFields {
  _score
  createdAt
  gadStateOrProvince
  id
  isReadOnly
  modifiedAt
  pk
  typeName
  uid
  upaCity
  upaEmail
  upaLine1
  upaLine2
  upaPhoneNumber
  upaPostcode
}

input UrbanPropertyAddressOrderByInput {
  direction: OrderByDirection
  field: UrbanPropertyAddressOrderByFields!
}

"""
A Url scalar
"""
scalar Url

"""
*@incubating*
"""
type UrlOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Url!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
A URN scalar
"""
scalar Urn

"""
*@incubating*
"""
type UrnOrderingInfo implements Auditable & Model & Node & ValueOrderingInfo {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  *@incubating*
  """
  compositeKey: Tuple!
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  *@incubating*
  """
  target: Urn!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
interface ValueOrderingInfo implements Auditable & Model & Node {
  """
  *@incubating*
  """
  addingTime: DateTime
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  field: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@incubating*
  """
  order: Long!
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  *@incubating*
  """
  source: Model!
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

type ValueOrderingInfoConnection {
  edges: [ValueOrderingInfoConnectionValueOrderingInfoEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ValueOrderingInfoConnectionValueOrderingInfoEdge {
  cursor: String!
  node: ValueOrderingInfo
}

enum ValueOrderingInfoOrderByFields {
  _score
  addingTime
  createdAt
  field
  id
  isReadOnly
  modifiedAt
  order
  pk
  typeName
  uid
}

input ValueOrderingInfoOrderByInput {
  direction: OrderByDirection
  field: ValueOrderingInfoOrderByFields!
}

"""
*@incubating*
"""
type ViaxKeycloakDigitalIdentity implements Auditable & DigitalIdentity & KeycloakDigitalIdentity & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  diLogin: String!
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

input ViaxKeycloakDigitalIdentityInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  diLogin: String
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
}

"""
Default implementation of lifecycle event

*@incubating*
"""
type ViaxLifecycleEvent implements Auditable & LifecycleEvent & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  *@incubating*
  """
  lcevExecutedAt: DateTime @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  lcevPartyAccountId: String @deprecated(reason: "Use created and modified At/By")
  """
  *@incubating*
  """
  lcevPartyId: String @deprecated(reason: "Use created and modified At/By")
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

"""
*@incubating*
"""
type ViaxPricingContext implements Auditable & Model & Node & PricingContext {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  *@incubating*
  """
  prcCurrency: UnitOfMeasure
  """
  *@incubating*
  """
  prcPriceable: Priceable
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
}

input ViaxPricingContextInput {
  uid: UUID
}

"""
*@incubating*
"""
type ViaxUrbanPropertyAddress implements Auditable & GeographicAddress & Model & Node & UrbanPropertyAddress {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@incubating*
  """
  gadCountry: Country
  """
  *@incubating*
  """
  gadStateOrProvince: String
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@incubating*
  """
  upaCity: String
  """
  *@incubating*
  """
  upaEmail: String
  """
  *@incubating*
  """
  upaLine1: String
  """
  *@incubating*
  """
  upaLine2: String
  """
  *@incubating*
  """
  upaPhoneNumber: String
  """
  *@incubating*
  """
  upaPostcode: String
}

type ViaxUrbanPropertyAddressConnection {
  edges: [ViaxUrbanPropertyAddressConnectionViaxUrbanPropertyAddressEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ViaxUrbanPropertyAddressConnectionViaxUrbanPropertyAddressEdge {
  cursor: String!
  node: ViaxUrbanPropertyAddress
}

input ViaxUrbanPropertyAddressInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  gadCountry: CountryInput
  gadStateOrProvince: String
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  uid: UUID
  upaCity: String
  upaEmail: String
  upaLine1: String
  upaLine2: String
  upaPhoneNumber: String
  upaPostcode: String
}

enum ViaxUrbanPropertyAddressOrderByFields {
  _score
  createdAt
  gadStateOrProvince
  id
  isReadOnly
  modifiedAt
  pk
  uid
  upaCity
  upaEmail
  upaLine1
  upaLine2
  upaPhoneNumber
  upaPostcode
}

input ViaxUrbanPropertyAddressOrderByInput {
  direction: OrderByDirection
  field: ViaxUrbanPropertyAddressOrderByFields!
}

input ViaxUrbanPropertyAddressReferenceInput {
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type ViewConfig implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Any custom specific value used to uniquely identify the view config
    
  *@incubating*
  """
  code: String
  """
  SpEL expression or name of bean used to test whether the view config should be applied
    
  *@incubating*
  """
  condition: String
  """
  For each element the system looks for bean io.viax.core.model.service.viewconfig.ViewConfigConditionContextProvider to get a context passed to script executor which evaluates SpEL condition
    
  *@incubating*
  """
  contextProviders: [String!]
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  Filter applied when a search is done on owner type service side
    
  *@incubating*
  """
  filter: String
  """
  Resolver bean responsible to provide values for variables used by filter
    
  *@incubating*
  """
  filterValueResolvers: [ViewFilterValueResolverConfig!]
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  Query applied on a search service side
    
  *@incubating*
  """
  query: String
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  Roles of users which the view config is considered for
    
  *@incubating*
  """
  viewForRole: [String!]
  """
  Name of type the view config relates to
    
  *@incubating*
  """
  viewForType: String!
  """
  Data transformers applied on fields of models
    
  *@incubating*
  """
  viewTransformConfigs: [ViewTransformConfig!]
}

type ViewConfigConnection {
  edges: [ViewConfigConnectionViewConfigEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type ViewConfigConnectionViewConfigEdge {
  cursor: String!
  node: ViewConfig
}

input ViewConfigInput {
  allowedToModifyFor: [UUID!]
  code: String
  condition: String
  contextProviders: [String!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  filter: String
  filterValueResolvers: [ViewFilterValueResolverConfigInput!]
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  pk: PKRef
  query: String
  uid: UUID
  viewForRole: [String!]
  viewForType: String
  viewTransformConfigs: [ViewTransformConfigInput!]
}

enum ViewConfigOrderByFields {
  _score
  code
  condition
  createdAt
  filter
  id
  isReadOnly
  modifiedAt
  pk
  query
  uid
  viewForType
}

input ViewConfigOrderByInput {
  direction: OrderByDirection
  field: ViewConfigOrderByFields!
}

input ViewConfigReferenceInput {
  code: String
  pk: PKRef
  uid: UUID
}

"""
*@incubating*
"""
type ViewFilterValueResolverConfig {
  """
  Bean responsible to provide value for the variable. See io.viax.core.model.query.restriction.ViewFilterValueResolver
    
  *@incubating*
  """
  resolver: String!
  """
  Name of variable used as a placeholder in filter
    
  *@incubating*
  """
  variable: String!
}

input ViewFilterValueResolverConfigInput {
  resolver: String
  variable: String
}

"""
*@incubating*
"""
type ViewTransformConfig {
  """
  Name of field which values should be transformed
    
  *@incubating*
  """
  fieldName: String!
  """
  Bean responsible to transform data. See io.viax.core.model.views.ViewTransformer
    
  *@incubating*
  """
  transformer: String!
}

input ViewTransformConfigInput {
  fieldName: String
  transformer: String
}

"""
*@experimental*
"""
type WasmFunction implements Auditable & Model & Node {
  """
  When values are present then modifying/deleting is allowed only by users mentioned in this list. When a model is mutated and empty list is added that it is treated as a setting of 'allowedToModifyFor' for the current user otherwise pass null to 'allowedToModifyFor' to turn off read only mode for all other users
    
  *@incubating*
  """
  allowedToModifyFor: [UUID!]
  """
  Audit log of changes.
    
  *@incubating*
  """
  auAudit: Audit
  """
  Timestamp indicating when the instance was created.
    
  *@incubating*
  """
  createdAt: DateTime
  """
  DigitalIdentity of the user who created the instance.
    
  *@incubating*
  """
  createdBy: DigitalIdentity
  """
  *@experimental*
  """
  fun: File
  """
  Not globally unique low-level DB identifier.
    
  *@stable*
  """
  id: ID!
  """
  When allowedToModifyFor has values then the value for this field is true for all users which are not mentioned within values of allowedToModifyFor
    
  *@incubating*
  """
  isReadOnly: Boolean
  """
  Timestamp indicating when the instance was last updated.
    
  *@incubating*
  """
  modifiedAt: DateTime
  """
  DigitalIdentity of the user who last updated the instance.
    
  *@incubating*
  """
  modifiedBy: DigitalIdentity
  """
  *@experimental*
  """
  name: String
  """
  Primary key.
    
  Represents a specific *candidate key* used as a default for relationships
  and lookups.
    
  *@stable*
  """
  pk(typeName: String): PK!
  """
  Primary keys for all types the instance relates to.
    
  *@incubating*
  """
  pks: [PK!]
  """
  The field is managed internally, links are set automatically when some other model references this model. The main goal of the field to remove automatically instances on removing target models referenced by instance of ModelsOrderingInfo
    
  *@incubating*
  """
  referencesFromModelsOrderingInfo: [ModelsOrderingInfo!]
  """
  GraphQL type name.
    
  *@incubating*
  """
  typeName: String!
  """
  Globally unique identifier.
    
  *@stable*
  """
  uid: UUID!
  """
  *@experimental*
  """
  version: String
}

type WasmFunctionConnection {
  edges: [WasmFunctionConnectionWasmFunctionEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type WasmFunctionConnectionWasmFunctionEdge {
  cursor: String!
  node: WasmFunction
}

input WasmFunctionInput {
  allowedToModifyFor: [UUID!]
  createdAt: DateTime
  createdBy: DigitalIdentityInput
  fun: Upload
  modifiedAt: DateTime
  modifiedBy: DigitalIdentityInput
  name: String
  pk: PKRef
  uid: UUID
  version: String
}

enum WasmFunctionOrderByFields {
  _score
  createdAt
  id
  isReadOnly
  modifiedAt
  name
  pk
  uid
  version
}

input WasmFunctionOrderByInput {
  direction: OrderByDirection
  field: WasmFunctionOrderByFields!
}

input WasmFunctionReferenceInput {
  name: String
  pk: PKRef
  uid: UUID
}

